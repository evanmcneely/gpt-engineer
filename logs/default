"\n    Instructions: rename the function handleInput in the writingAssistantHook to onInput. update the function everywhere it is used\n\n\n    -- ./src/action-creators/actions.js\n1: export const BUILDER_LOADED = 'BUILDER_LOADED';\n2: export const SET_USER_INFO = 'SET_USER_INFO';\n3: export const SUBDOMAIN_UPDATED = 'SUBDOMAIN_UPDATED';\n4: \n5: // UI - NAV\n6: export const NAVIGATION_MOUNTED = 'NAVIGATION_MOUNTED';\n7: \n8: // UI - CHECKLIST\n9: export const OPEN_CHECKLIST_SIDEBAR = 'OPEN_CHECKLIST_SIDEBAR';\n10: export const CLOSE_CHECKLIST_SIDEBAR = 'CLOSE_CHECKLIST_SIDEBAR';\n11: export const OPEN_CHECKLIST_TOOLTIP = 'OPEN_CHECKLIST_TOOLTIP';\n12: export const CLOSE_CHECKLIST_TOOLTIP = 'CLOSE_CHECKLIST_TOOLTIP';\n13: \n14: // UI - LIVE CHAT\n15: export const SET_LIVE_CHAT_STATUS = 'SET_LIVE_CHAT_STATUS';\n16: \n17: // UI - MODAL\n18: export const OPEN_MODAL = 'OPEN_MODAL';\n19: export const CLOSE_MODAL = 'CLOSE_MODAL';\n20: export const OPEN_FULL_MODAL = 'OPEN_FULL_MODAL';\n21: export const CLOSE_FULL_MODAL = 'CLOSE_FULL_MODAL';\n22: \n23: // FORMS\n24: export const CLEAR_FORM_DATA = 'CLEAR_FORM_DATA';\n25: export const CREATE_CURRENT_FORM = 'CREATE_CURRENT_FORM';\n26: export const DISPLAY_PRODUCT_SUMMARY = 'DISPLAY_PRODUCT_SUMMARY';\n27: export const FORMS_MARKED_FOR_DELETION_SUCCESS = 'FORMS_MARKED_FOR_DELETION_SUCCESS';\n28: export const SAVE_LINK = 'SAVE_LINK';\n29: export const SET_CURRENT_FORMS = 'SET_CURRENT_FORMS';\n30: export const SET_FORM_DATA = 'SET_FORM_DATA';\n31: export const SET_FORM_FIELDS = 'SET_FORM_FIELDS';\n32: export const SET_FORM_STATE = 'SET_FORM_STATE';\n33: \n34: // INTEGRATION DATA\n35: export const SET_INTEGRATIONS_DATA = 'SET_INTEGRATIONS_DATA';\n36: export const UPDATE_INTEGRATION = 'UPDATE_INTEGRATION';\n37: export const UPDATE_INTEGRATIONS = 'UPDATE_INTEGRATIONS';\n38: \n39: // FORM DATA\n40: export const CREATE_NEW_FIELDSET = 'CREATE_NEW_FIELDSET';\n41: export const FIELDSET_CREATED = 'FIELDSET_CREATED';\n42: export const FIELDSET_LOADED = 'FIELDSET_LOADED';\n43: export const FIELDSET_ERROR = 'FIELDSET_ERROR';\n44: export const FORMS_LOADED = 'FORMS_LOADED';\n45: export const FORM_CREATED = 'FORM_CREATED';\n46: export const FORM_LOADED = 'FORM_LOADED';\n47: export const OPEN_FORM_WIDGET = 'OPEN_FORM_WIDGET';\n48: \n49: // INTEGRATIONS\n50: export const REFRESH_INTEGRATION = 'REFRESH_INTEGRATION';\n51: export const INTEGRATION_UPDATED = 'INTEGRATION_UPDATED';\n52: \n53: // Firebase syncing actions\n54: export const SAVE_STARTED = 'SAVE_STARTED';\n55: export const SAVE_FINISHED = 'SAVE_FINISHED';\n56: export const WAITING_FOR_SAVE = 'WAITING_FOR_SAVE';\n57: \n58: export const UNDO_STATE = 'UNDO_STATE';\n59: export const REDO_STATE = 'REDO_STATE';\n60: export const SPLICE_NEW_WIDGET_AT_PATH = 'SPLICE_NEW_WIDGET_AT_PATH';\n61: export const REMOVE_BOX_AT_PATH = 'REMOVE_BOX_AT_PATH';\n62: export const DUPLICATE_WIDGET = 'DUPLICATE_WIDGET';\n63: export const DUPLICATE_COLUMN = 'DUPLICATE_COLUMN';\n64: export const DUPLICATE_LAYOUT = 'DUPLICATE_LAYOUT';\n65: export const DUPLICATE_SECTION = 'DUPLICATE_SECTION';\n66: export const GET_CLIPBOARD = 'GET_CLIPBOARD';\n67: export const CLEAR_CLIPBOARD = 'CLEAR_CLIPBOARD';\n68: export const COPY_SECTION = 'COPY_SECTION';\n69: export const PASTE_SECTION = 'PASTE_SECTION';\n70: export const REMOVE_COLUMN = 'REMOVE_COLUMN';\n71: export const REMOVE_LAYOUT = 'REMOVE_LAYOUT';\n72: export const REMOVE_SECTION = 'REMOVE_SECTION';\n73: export const SHOW_REFRESH_MODAL = 'SHOW_REFRESH_MODAL';\n74: \n75: // Focus\n76: export const FOCUS_CONTENT = 'FOCUS_CONTENT';\n77: export const FOCUS_WIDGET = 'FOCUS_WIDGET';\n78: \n79: // Foundry\n80: export const FETCH_PAGES = 'FETCH_PAGES';\n81: export const FETCH_PAGES_SUCCESS = 'FETCH_PAGES_SUCCESS';\n82: export const FETCH_PAGES_FAILURE = 'FETCH_PAGES_FAILURE';\n83: \n84: export const FETCH_FOUNDRY_ENTITY = 'FETCH_FOUNDRY_ENTITY';\n85: export const FETCH_FOUNDRY_ENTITY_SUCCESS = 'FETCH_FOUNDRY_ENTITY_SUCCESS';\n86: export const FETCH_FOUNDRY_ENTITY_FAILURE = 'FETCH_FOUNDRY_ENTITY_FAILURE';\n87: \n88: export const FETCH_FOUNDRY_USER_CONFIG = 'FETCH_FOUNDRY_USER_CONFIG';\n89: export const FETCH_FOUNDRY_USER_CONFIG_SUCCESS = 'FETCH_FOUNDRY_USER_CONFIG_SUCCESS';\n90: \n91: export const UPDATE_FOUNDRY_ENTITY_CONTENT = 'UPDATE_FOUNDRY_ENTITY_CONTENT';\n92: export const UPDATE_FOUNDRY_ENTITY_CONTENT_SUCCESS = 'UPDATE_FOUNDRY_ENTITY_CONTENT_SUCCESS';\n93: export const UPDATE_FOUNDRY_ENTITY_CONTENT_FAILURE = 'UPDATE_FOUNDRY_ENTITY_CONTENT_FAILURE';\n94: \n95: export const REVERT_FOUNDRY_PAGE_TO_LAST_PUBLISHED = 'REVERT_FOUNDRY_PAGE_TO_LAST_PUBLISHED';\n96: export const REVERT_FOUNDRY_PAGE_TO_LAST_PUBLISHED_FAILURE =\n97:   'REVERT_FOUNDRY_PAGE_TO_LAST_PUBLISHED_FAILURE';\n98: export const REVERT_FOUNDRY_PAGE_TO_LAST_PUBLISHED_SUCCESS =\n99:   'REVERT_FOUNDRY_PAGE_TO_LAST_PUBLISHED_SUCCESS';\n100: \n101: export const UPDATE_PUBLISH_OPTIONS = 'UPDATE_PUBLISH_OPTIONS';\n102: export const UPDATE_PUBLISH_OPTIONS_SUCCESS = 'UPDATE_PUBLISH_OPTIONS_SUCCESS';\n103: export const UPDATE_PUBLISH_OPTIONS_FAILURE = 'UPDATE_PUBLISH_OPTIONS_FAILURE';\n104: \n105: export const PUBLISH = 'PUBLISH';\n106: export const START_PUBLISH = 'START_PUBLISH';\n107: export const PUBLISH_SUCCESS = 'PUBLISH_SUCCESS';\n108: export const PUBLISH_FAILURE = 'PUBLISH_FAILURE';\n109: export const NOOP_PUBLISH_PAGE = 'NOOP_PUBLISH_PAGE';\n110: export const UPDATE_SITES_PUBLISH_OPTIONS_SUCCESS = 'UPDATE_SITES_PUBLISH_OPTIONS_SUCCESS';\n111: \n112: export const CHANGE_PREVIEW_DEVICE = 'CHANGE_PREVIEW_DEVICE';\n113: export const CLOSE_PREVIEW = 'CLOSE_PREVIEW';\n114: export const BUILD_FOUNDRY_PREVIEW = 'BUILD_FOUNDRY_PREVIEW';\n115: export const BUILD_FOUNDRY_PREVIEW_SUCCESS = 'BUILD_FOUNDRY_PREVIEW_SUCCESS';\n116: export const BUILD_FOUNDRY_PREVIEW_FAILURE = 'BUILD_FOUNDRY_PREVIEW_FAILURE';\n117: \n118: export const CREATE_LEADBOX = 'CREATE_LEADBOX';\n119: export const CREATE_LEADBOX_SUCCESS = 'CREATE_LEADBOX_SUCCESS';\n120: export const CREATE_LEADBOX_FROM_TEMPLATE_SUCCESS = 'CREATE_LEADBOX_FROM_TEMPLATE_SUCCESS';\n121: export const CREATE_LEADBOX_FAILURE = 'CREATE_LEADBOX_FAILURE';\n122: export const DELETE_LEADBOX = 'DELETE_LEADBOX';\n123: export const DELETE_LEADBOX_SUCCESS = 'DELETE_LEADBOX_SUCCESS';\n124: export const DELETE_LEADBOX_FAILURE = 'DELETE_LEADBOX_FAILURE';\n125: \n126: export const UPDATE_LEADBOX_ANALYTICS = 'UPDATE_LEADBOX_ANALYTICS';\n127: \n128: // Facebook\n129: export const UPDATE_FACEBOOK_INFO = 'UPDATE_FACEBOOK_INFO';\n130: \n131: // Export options\n132: export const EXPORT_OPTINS = 'EXPORT_OPTINS';\n133: export const OPTIN_EXPORT_CREATED = 'OPTIN_EXPORT_CREATED';\n134: export const OPTIN_EXPORT_LOADED = 'OPTIN_EXPORT_LOADED';\n135: export const OPTIN_EXPORT_FAILED = 'OPTIN_EXPORT_FAILED';\n136: \n137: // Toasts\n138: export const ADD_TOAST = 'ADD_TOAST';\n139: export const REMOVE_TOAST = 'REMOVE_TOAST';\n140: \n141: // Panes\n142: export const OPEN_PANE = 'OPEN_PANE';\n143: export const CLOSE_PANE = 'CLOSE_PANE';\n144: export const CLOSE_ALL_PANES = 'CLOSE_ALL_PANES';\n145: export const REMOVE_DELETE_PROMPT = 'REMOVE_DELETE_PROMPT';\n146: export const SET_DATA_AT_PATH = 'SET_DATA_AT_PATH';\n147: export const SHOW_DELETE_PROMPT = 'SHOW_DELETE_PROMPT';\n148: export const TOGGLE_DELETE_PROMPT = 'TOGGLE_DELETE_PROMPT';\n149: export const UPDATE_PANE = 'UPDATE_PANE';\n150: export const UPDATE_PANE_OPTIONS = 'UPDATE_PANE_OPTIONS';\n151: export const SET_ACTIVE_PANE_TAB = 'SET_ACTIVE_PANE_TAB';\n152: \n153: // Warehouse\n154: export const WAREHOUSE_ERROR = 'WAREHOUSE_ERROR';\n155: \n156: // Zapier\n157: export const ZAPIER_AUTH_LOADED = 'ZAPIER_AUTH_LOADED';\n158: export const ZAP_DATA_LOADED = 'ZAP_DATA_LOADED';\n159: export const ZAPIER_ERROR = 'ZAPIER_ERROR';\n160: export const AUTHORIZE_ZAPIER = 'AUTHORIZE_ZAPIER';\n161: export const SET_ACTIVE_ZAP_CARD = 'SET_ACTIVE_ZAP_CARD';\n162: \n163: // Widget Options\n164: export const HIDE_WIDGET_OPTIONS = 'HIDE_WIDGET_OPTIONS';\n165: export const HIDE_WIDGET_OPTIONS_AND_CLICK_SHIELD = 'HIDE_WIDGET_OPTIONS_AND_CLICK_SHIELD';\n166: export const SET_VISIBLE_OPTION = 'SET_VISIBLE_OPTION';\n167: export const SHOW_WIDGET_OPTIONS = 'SHOW_WIDGET_OPTIONS';\n168: export const SHOW_WIDGET_OPTIONS_AND_CLICK_SHIELD = 'SHOW_WIDGET_OPTIONS_AND_CLICK_SHIELD';\n169: export const UNSET_VISIBLE_OPTION = 'UNSET_VISIBLE_OPTION';\n170: export const UPDATE_TOOLBAR_POSITION = 'UPDATE_TOOLBAR_POSITION';\n171: export const UPDATE_TEXT = 'UPDATE_TEXT';\n172: export const UPDATE_TEXT_SAGA = 'UPDATE_TEXT_SAGA';\n173: \n174: // Click Shield\n175: export const SET_CLICK_SHIELD = 'SET_CLICK_SHIELD';\n176: export const UNSET_CLICK_SHIELD = 'UNSET_CLICK_SHIELD';\n177: \n178: // Display Context\n179: export const SET_DISPLAY_CONTEXT = 'SET_DISPLAY_CONTEXT';\n180: \n181: // Template\n182: export const FETCH_CURRENT_TEMPLATE = 'FETCH_CURRENT_TEMPLATE';\n183: export const FETCH_CURRENT_TEMPLATE_SUCCESS = 'FETCH_CURRENT_TEMPLATE_SUCCESS';\n184: export const FETCH_CURRENT_TEMPLATE_FAILURE = 'FETCH_CURRENT_TEMPLATE_FAILURE';\n185: \n186: // Lead Rank Recommendations\n187: export const UPDATE_PAGE_RECOMMENDATIONS = 'UPDATE_PAGE_RECOMMENDATIONS';\n188: \n189: // Layout manipulation\n190: export const ORDER_SECTIONS_BY_GUID = 'ORDER_SECTIONS_BY_GUID';\n191: export const MOVE_LAYOUT = 'MOVE_LAYOUT';\n192: export const MOVE_COLUMN = 'MOVE_COLUMN';\n193: export const ADD_SECTION_TO_PAGE = 'ADD_SECTION_TO_PAGE';\n194: export const ADD_COLUMN_TO_LAYOUT = 'ADD_COLUMN_TO_LAYOUT';\n195: export const ADD_LAYOUT_TO_SECTION = 'ADD_LAYOUT_TO_SECTION';\n196: export const SET_BOX_NAME_BY_GUID = 'SET_BOX_NAME_BY_GUID';\n197: export const UPDATE_SECTION_OPTIONS = 'UPDATE_SECTION_OPTIONS';\n198: export const UPDATE_COLUMN_OPTIONS = 'UPDATE_COLUMN_OPTIONS';\n199: export const POP_AND_SPLICE_BOX_AT_PATH = 'POP_AND_SPLICE_BOX_AT_PATH';\n200: \n201: // Section Templates\n202: export const ADD_SECTION_TEMPLATE = 'ADD_SECTION_TEMPLATE';\n203: export const INSERT_SECTION_TEMPLATE = 'INSERT_SECTION_TEMPLATE';\n204: export const SWAP_SECTION_TEMPLATE = 'SWAP_SECTION_TEMPLATE';\n205: export const SAVE_SECTION_TEMPLATE = 'SAVE_SECTION_TEMPLATE';\n206: \n207: // Lead rank\n208: export const LEAD_RANK_LOADED = 'LEAD_RANK_LOADED';\n209: export const LEAD_RANK_DISPLAY_OPTIONS_SAVE = 'LEAD_RANK_DISPLAY_OPTIONS_SAVE';\n210: export const LEAD_RANK_DISPLAY_OPTIONS_LOADED = 'LEAD_RANK_DISPLAY_OPTIONS_LOADED';\n211: export const LEAD_RANK_DISPLAY_OPTIONS_LOADED_ERROR = 'LEAD_RANK_DISPLAY_OPTIONS_LOADED_ERROR';\n212: export const LEAD_RANK_DISPLAY_OPTIONS_SAVE_ERROR = 'LEAD_RANK_DISPLAY_OPTIONS_SAVE_ERROR';\n213: \n214: // Mandrel\n215: export const SET_MANDREL = 'SET_MANDREL';\n216: export const FETCH_MANDREL_ENTITY = 'FETCH_MANDREL_ENTITY';\n217: export const CREATE_LEADBOX_TEMPLATE = 'CREATE_LEADBOX_TEMPLATE';\n218: export const DELETE_LEADBOX_TEMPLATE = 'DELETE_LEADBOX_TEMPLATE';\n219: export const PUBLISH_TEMPLATE = 'PUBLISH_TEMPLATE';\n220: export const BUILD_MANDREL_PREVIEW = 'BUILD_MANDREL_PREVIEW';\n221: \n222: // Leadbar\n223: export const LEADBAR_LAYOUT_CHANGED = 'LEADBAR_LAYOUT_CHANGED';\n224: \n225: // Drag\n226: export const RESIZE_BEGIN = 'RESIZE_BEGIN';\n227: export const RESIZE_VERTICAL_BEGIN = 'RESIZE_VERTICAL_BEGIN';\n228: export const RESIZE_VERTICAL_END = 'RESIZE_VERTICAL_END';\n229: export const RESIZE_BOX_AT_PATH = 'RESIZE_BOX_AT_PATH';\n230: export const RESIZE_END = 'RESIZE_END';\n231: export const STASH_AND_REMOVE_BOX_AT_PATH = 'STASH_AND_REMOVE_BOX_AT_PATH';\n232: export const STOP_DRAGGING_WIDGET = 'STOP_DRAGGING_WIDGET';\n233: \n234: // Colors\n235: export const PUSH_COLOR = 'PUSH_COLOR';\n236: export const RESET_COLOR_HISTORY = 'RESET_COLOR_HISTORY';\n237: \n238: // Payments\n239: export const CONNECT_GATEWAY = 'CONNECT_GATEWAY';\n240: export const CONNECT_GATEWAY_FAILED = 'CONNECT_GATEWAY_FAILED';\n241: export const CREATE_GATEWAY = 'CREATE_GATEWAY';\n242: export const CREATE_GATEWAY_FAILED = 'CREATE_GATEWAY_FAILED';\n243: export const FETCH_GATEWAY = 'FETCH_GATEWAY';\n244: export const FETCH_GATEWAY_FAILED = 'FETCH_GATEWAY_FAILED';\n245: export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\n246: export const FETCH_PRODUCTS_COMPLETE = 'FETCH_PRODUCTS_COMPLETE';\n247: export const FETCH_PRODUCTS_FAILED = 'FETCH_PRODUCTS_FAILED';\n248: export const FETCH_PRODUCTS_RUNNING = 'FETCH_PRODUCTS_RUNNING';\n249: export const LOAD_STRIPE_PRODUCTS = 'LOAD_STRIPE_PRODUCTS';\n250: export const SET_GATEWAY = 'SET_GATEWAY';\n251: export const UPDATE_LINE_ITEM = 'UPDATE_LINE_ITEM';\n252: export const UPDATE_LINE_ITEMS = 'UPDATE_LINE_ITEMS';\n253: export const UPDATE_LINE_ITEMS_DATA = 'UPDATE_LINE_ITEMS_DATA';\n254: export const SET_SHIPPABLE = 'SET_SHIPPABLE';\n255: \n256: // Experience API\n257: export const UPDATE_MILESTONES = 'UPDATE_MILESTONES';\n258: export const SET_MILESTONES = 'SET_MILESTONES';\n259: export const SET_EXPERIENCE = 'SET_EXPERIENCE';\n260: \n261: // AI Copy\n262: export const FETCH_AICOPY_CREDITS = 'FETCH_AICOPY_CREDITS';\n263: export const FETCH_AICOPY_HISTORY = 'FETCH_AICOPY_HISTORY';\n264: export const UPDATE_AICOPY_CREDITS = 'UPDATE_AICOPY_CREDITS';\n265: export const UPDATE_AICOPY_HISTORY = 'UPDATE_AICOPY_HISTORY';\n266: export const SAVE_AICOPY_FORM_INPUTS = 'SAVE_AICOPY_FORM_INPUTS';\n267: \n268: // Other\n269: export const LOAD_CONTENT_DRAFT = 'LOAD_CONTENT_DRAFT';\n270: export const RESET_CONTENT_DRAFT = 'RESET_CONTENT_DRAFT';\n271: export const SET_ROOT_CONTENT_ID = 'SET_ROOT_CONTENT_ID';\n272: export const UPDATE_WIDGET_OPTIONS = 'UPDATE_WIDGET_OPTIONS';\n273: export const SANITIZE_STRUCTURE = 'SANITIZE_STRUCTURE';\n274: export const UPDATE_SOCIAL_PLATFORM = 'UPDATE_SOCIAL_PLATFORM';\n275: export const UPDATE_POSITION = 'UPDATE_POSITION';\n276: export const REMOVE_DATA_AT_PATH = 'REMOVE_DATA_AT_PATH';\n277: export const SET_BOX_AT_PATH = 'SET_BOX_AT_PATH';\n278: export const SET_BOX_DATA_AT_PATH = 'SET_BOX_DATA_AT_PATH';\n279: export const SET_BOX_DATA_BY_GUID = 'SET_BOX_DATA_BY_GUID';\n280: export const RESET = 'RESET';\n281: export const UPDATE_EDITING_TIMESTAMP = 'UPDATE_EDITING_TIMESTAMP';\n282: export const SET_BRAND_COLORS = 'SET_BRAND_COLORS';\n283: export const UPDATE_ENTITY_ANALYTICS = 'UPDATE_ENTITY_ANALYTICS';\n284: export const UPDATE_DRAFT_SETTING = 'UPDATE_DRAFT_SETTING';\n285: export const UPDATE_DRAFT_SETTINGS = 'UPDATE_DRAFT_SETTINGS';\n286: export const UPDATE_ASSET_LANGUAGE = 'UPDATE_ASSET_LANGUAGE';\n287: export const UPDATE_GLOBAL_BUTTONS = 'UPDATE_GLOBAL_BUTTONS';\n288: export const UPDATE_IMAGE = 'UPDATE_IMAGE';\n289: \n290: export const USER_PREFERENCES_LOADED = 'USER_PREFERENCES_LOADED';\n291: export const USER_PREFERENCES_FETCH = 'USER_PREFERENCES_FETCH';\n292: export const USER_PREFERENCE_UPDATE = 'USER_PREFERENCE_UPDATE';\n293: export const SET_FEATURE_FLAGS = 'SET_FEATURE_FLAGS';\n294: \n295: export const FETCH_CUSTOM_FONTS = 'FETCH_CUSTOM_FONTS';\n296: export const LOAD_CUSTOM_FONTS = 'LOAD_CUSTOM_FONTS';\n297: export const CLICKED_BUTTON = 'CLICKED_BUTTON';\n298: export const VIEWED_FEATURE = 'VIEWED_FEATURE';\n\n\n-- ./src/action-creators/panes.js\n1: import { selectPane } from '../lib/selectors/ui';\n2: import {\n3:   CLOSE_PANE,\n4:   OPEN_PANE,\n5:   REMOVE_DELETE_PROMPT,\n6:   SET_DATA_AT_PATH,\n7:   SHOW_DELETE_PROMPT,\n8:   TOGGLE_DELETE_PROMPT,\n9:   UPDATE_PANE,\n10:   UPDATE_PANE_OPTIONS,\n11: } from './actions';\n12: import { getInPath } from '../lib/get-in-path';\n13: \n14: export function updatePane(name) {\n15:   return (dispatch, getState) => {\n16:     if (!name) {\n17:       return null;\n18:     }\n19:     const state = getState();\n20:     const paneState = selectPane(state, name);\n21:     const { path: strPath } = paneState;\n22:     if (!strPath) {\n23:       return null;\n24:     }\n25: \n26:     const path = strPath.split('/');\n27:     const data = getInPath(state.core, path);\n28: \n29:     let extraData = null;\n30:     if (paneState.extra) {\n31:       extraData = Object.keys(paneState.extra).reduce((acc, extraStrPath) => {\n32:         const extraPath = extraStrPath.split('/');\n33:         let newData;\n34: \n35:         // when saving leadbox analytics pane, it has extra path of\n36:         // foundry/<entityId>/entity/content/name if name changed\n37:         try {\n38:           newData = getInPath(state, extraPath);\n39:         } catch (e) {\n40:           newData = getInPath(state.core, extraPath);\n41:         }\n42: \n43:         acc[extraStrPath] = newData;\n44: \n45:         return acc;\n46:       }, {});\n47:     }\n48: \n49:     const updatePaneAction = {\n50:       type: UPDATE_PANE,\n51:       name,\n52:       data,\n53:       extra: extraData,\n54:     };\n55: \n56:     return dispatch(updatePaneAction);\n57:   };\n58: }\n59: \n60: export function closePane(name) {\n61:   return {\n62:     type: CLOSE_PANE,\n63:     name,\n64:   };\n65: }\n66: \n67: export function restoreAndClosePane(name) {\n68:   return (dispatch, getState) => {\n69:     if (!name) {\n70:       return;\n71:     }\n72: \n73:     const snapshot = selectPane(getState(), name);\n74:     const { path, data } = snapshot;\n75: \n76:     dispatch({\n77:       type: SET_DATA_AT_PATH,\n78:       path,\n79:       data,\n80:     });\n81:     if (Object.prototype.hasOwnProperty.call(snapshot, 'extra')) {\n82:       Object.entries(snapshot.extra).forEach(([k, v]) => {\n83:         if (k.indexOf('core') === 0) {\n84:           // ignore none core extra data paths, this action only deals with core data paths.\n85:           dispatch({\n86:             type: SET_DATA_AT_PATH,\n87:             path: k,\n88:             data: v,\n89:           });\n90:         }\n91:       });\n92:     }\n93:     dispatch(closePane(name));\n94:   };\n95: }\n96: \n97: export function openPane(name, strPath, extra, options) {\n98:   return (dispatch, getState) => {\n99:     let data;\n100:     const state = getState();\n101:     if (typeof strPath === 'string') {\n102:       const path = strPath.split('/');\n103:       data = getInPath(state.core, path);\n104:     }\n105:     return dispatch({\n106:       type: OPEN_PANE,\n107:       name,\n108:       path: strPath,\n109:       data,\n110:       extra,\n111:       options,\n112:     });\n113:   };\n114: }\n115: \n116: export function showDeletePrompt(name) {\n117:   return {\n118:     type: SHOW_DELETE_PROMPT,\n119:     name,\n120:   };\n121: }\n122: \n123: export function removeDeletePrompt(name) {\n124:   return {\n125:     type: REMOVE_DELETE_PROMPT,\n126:     name,\n127:   };\n128: }\n129: \n130: export function toggleDeletePrompt(name) {\n131:   return {\n132:     type: TOGGLE_DELETE_PROMPT,\n133:     name,\n134:   };\n135: }\n136: \n137: export function updatePaneOptions(name, options) {\n138:   return {\n139:     type: UPDATE_PANE_OPTIONS,\n140:     name,\n141:     options,\n142:   };\n143: }\n\n\n-- ./src/constants/types.js\n1: import { widgetTypes, contentTypes } from '@lp/crucible/dist/constants/types';\n2: \n3: export const templateTypes = {\n4:   BAR: 'LeadbarTemplate',\n5:   BOX: 'LeadboxTemplate',\n6:   SECTION: 'SectionTemplate',\n7:   PAGE: 'LeadpageTemplate',\n8:   SITE: 'SiteTemplate',\n9: };\n10: \n11: export const paneTypes = {\n12:   WIDGET: 'WidgetPane',\n13:   LAYOUT: 'LayoutPane',\n14:   PAGE_STYLE: 'PageStylePane',\n15:   PAGES: 'PagesPane',\n16:   LEADBAR_LAYOUT: 'BarLayoutPane',\n17:   LEADBOX_WIDGET: 'LeadboxWidgetPane',\n18:   LEADBOX_LAYOUT: 'LeadboxLayoutPane',\n19:   HELP: 'help',\n20:   EDITOR: 'EditorPane', // used for form and checkout form settings\n21:   WIDGET_SIDEBAR: 'WidgetSidebar', // used for image-text, social and social like widget settings\n22:   SECTION: 'SectionPane',\n23:   SETTINGS: 'SettingsPane',\n24:   AICOPY: 'AICopyPane',\n25: };\n26: \n27: export const modalTypes = {\n28:   EXPORT_LEADS: 'exportLeads',\n29:   CHECKOUT_FORMS: 'checkoutForms',\n30:   PAGE_PUBLISH: 'pagePublishModal',\n31:   SECTION_PASTE_ERROR: 'PasteError',\n32:   SET_SUBDOMAIN: 'setSubdomainModal',\n33:   ZAPIER_PARTNER_API: 'ZapierPartnerApiModal',\n34:   INTEGRATIONS_MANAGER: 'IntegrationsManager',\n35:   IMAGE_MANAGER: 'ImageManager',\n36: };\n37: \n38: export const imageTypes = {\n39:   SITE_HEADER_LOGO: 'SiteHeaderLogo',\n40:   WIDGET: 'Widget',\n41:   SOCIAL_PREVIEW: 'SocialPreview',\n42:   SITE_PAGE_SOCIAL_PREVIEW: 'SitePageSocialPreview',\n43:   PAGE_BACKGROUND: 'PageBackground',\n44:   SECTION_BACKGROUND: 'SectionBackground',\n45:   COLUMN_BACKGROUND: 'ColumnBackground',\n46:   FAVICON: 'Favicon',\n47:   POP_UP_IMAGE_LINK: 'PopUpImageLink',\n48: };\n49: \n50: // If number of siblings,\n51: // or number of any of parents siblings up to and including row,\n52: // or if width of any parents change, these need to update.\n53: export const resizeSensitiveWidgetTypes = [widgetTypes.ICON, widgetTypes.VIDEO];\n54: \n55: export const textWidgetTypes = [widgetTypes.TEXT];\n56: \n57: export const DragItemTypes = {\n58:   WIDGET: Symbol('WIDGET'),\n59:   NEW_WIDGET: Symbol('NEW_WIDGET'),\n60:   RESIZE: Symbol('RESIZE'),\n61:   REORDER_ROUTE: Symbol('REORDER_ROUTE'),\n62:   MOVE_FLOATING_MENU: Symbol('MOVE_FLOATING_MENU'),\n63:   SECTION: Symbol('SECTION'),\n64: };\n65: \n66: // naming scheme\n67: // L = logo\n68: // Nl = nav left align\n69: // Nm = nav middle align\n70: // Nr = nav right align\n71: // C = call to action\n72: // _ = spacer/space-between\n73: // $ = everything to its right is on a new row\n74: \n75: // Middle logo layout not yet implemented\n76: export const headerLayoutTypes = {\n77:   LNl: 'LNl',\n78:   LNlC: 'LNlC',\n79:   LNm: 'LNm',\n80:   LNmC: 'LNmC',\n81:   LNr: 'LNr',\n82:   LNrC: 'LNrC',\n83:   NlL_: 'NlL_',\n84:   NlL_C: 'NlL_C',\n85:   //  NmLNm: 'NmLNm',\n86:   //  _NmLNmC: '_NmLNmC',\n87:   L$Nm: 'L$Nm',\n88:   L$_NmC: 'L$_NmC',\n89: };\n90: \n91: export const ctaLayoutsMap = {\n92:   [headerLayoutTypes.LNl]: headerLayoutTypes.LNlC,\n93:   [headerLayoutTypes.LNlC]: headerLayoutTypes.LNl,\n94:   [headerLayoutTypes.LNm]: headerLayoutTypes.LNmC,\n95:   [headerLayoutTypes.LNmC]: headerLayoutTypes.LNm,\n96:   [headerLayoutTypes.LNr]: headerLayoutTypes.LNrC,\n97:   [headerLayoutTypes.LNrC]: headerLayoutTypes.LNr,\n98:   // eslint-disable-next-line no-underscore-dangle\n99:   [headerLayoutTypes.NlL_]: headerLayoutTypes.NlL_C,\n100:   // eslint-disable-next-line no-underscore-dangle\n101:   [headerLayoutTypes.NlL_C]: headerLayoutTypes.NlL_,\n102:   //  [headerLayoutTypes.NmLNm]: headerLayoutTypes._NmLNmC,\n103:   //  [headerLayoutTypes._NmLNmC]: headerLayoutTypes.NmLNm,\n104:   [headerLayoutTypes.L$Nm]: headerLayoutTypes.L$_NmC,\n105:   [headerLayoutTypes.L$_NmC]: headerLayoutTypes.L$Nm,\n106: };\n107: \n108: export const ctaLayouts = [\n109:   headerLayoutTypes.LNlC,\n110:   headerLayoutTypes.LNmC,\n111:   headerLayoutTypes.LNrC,\n112:   headerLayoutTypes.NlL_C,\n113:   headerLayoutTypes.L$_NmC,\n114: ];\n115: \n116: export const nonCtaLayouts = [\n117:   headerLayoutTypes.LNl,\n118:   headerLayoutTypes.LNm,\n119:   headerLayoutTypes.LNr,\n120:   // eslint-disable-next-line no-underscore-dangle\n121:   headerLayoutTypes.NlL_,\n122:   headerLayoutTypes.L$Nm,\n123: ];\n124: \n125: export const targetTypes = {\n126:   BLANK: '_blank',\n127:   TOP: '_top',\n128: };\n129: \n130: export const reactWidgetTypes = [\n131:   widgetTypes.BUTTON,\n132:   widgetTypes.CALENDLY,\n133:   widgetTypes.HTML,\n134:   widgetTypes.LOGO,\n135:   widgetTypes.OPEN_TABLE,\n136:   widgetTypes.SPACE,\n137:   widgetTypes.TEXT,\n138:   widgetTypes.VIDEO,\n139:   widgetTypes.SHARE,\n140:   widgetTypes.LIKE,\n141:   widgetTypes.LINE,\n142:   widgetTypes.COUNTDOWN,\n143: ];\n144: \n145: export const draggableToolbarWidgets = [\n146:   widgetTypes.CALENDLY,\n147:   widgetTypes.HTML,\n148:   widgetTypes.LOGO,\n149:   widgetTypes.OPEN_TABLE,\n150:   widgetTypes.SPACE,\n151:   widgetTypes.TEXT,\n152:   widgetTypes.VIDEO,\n153:   widgetTypes.LIKE,\n154:   widgetTypes.BUTTON,\n155:   widgetTypes.COUNTDOWN,\n156: ];\n157: \n158: export const logoTypes = {\n159:   IMAGE: 'image',\n160:   TEXT: 'text',\n161: };\n162: \n163: export const kindToFirebaseRoot = {\n164:   [contentTypes.SITE]: 'Sites',\n165:   [contentTypes.PAGE]: 'Pages',\n166:   [contentTypes.BOX]: 'LeadBoxes',\n167:   [contentTypes.BAR]: 'Bars',\n168: };\n169: \n170: // Available options for 'application' field on an image from the asset api\n171: export const imageUploadSources = {\n172:   BUILDER_3: 'builder3',\n173:   CORE: 'core',\n174:   GETTY: 'getty_api',\n175:   SHUTTERSTOCK: 'shutterstock_api',\n176: };\n177: \n178: export const DROP_DIRECTIONS = {\n179:   TOP: 'top',\n180:   BOTTOM: 'bottom',\n181:   LEFT: 'left',\n182:   RIGHT: 'right',\n183: };\n184: \n185: export const DROP_SIZES = {\n186:   MEDIUM: 'md',\n187:   LARGE: 'lg',\n188: };\n189: \n190: export const settingsPaneTabs = {\n191:   SEO: 'SEO',\n192:   Social: 'Social',\n193:   Analytics: 'Analytics',\n194:   Language: 'Language',\n195: };\n196: \n197: export const stylesPaneTabs = {\n198:   Buttons: 'Buttons',\n199:   Fonts: 'Fonts',\n200:   Background: 'Background',\n201:   Favicon: 'Favicon',\n202:   CSS: 'CSS',\n203: };\n204: \n205: export const writingAssistantTabs = {\n206:   Copy: 'GENERATE',\n207:   History: 'HISTORY',\n208: };\n209: \n210: export const PANE_TABS = {\n211:   [paneTypes.PAGE_STYLE]: stylesPaneTabs,\n212:   [paneTypes.SETTINGS]: settingsPaneTabs,\n213: };\n214: \n215: export const INTEGRATION_STATUS = {\n216:   READY: 'ready',\n217:   LOADING: 'loading',\n218:   DONE: 'done',\n219:   REAUTHORIZING: 'reauthorizing',\n220:   FAILED: 'failed',\n221:   AUTHORIZATION_REQUEST: 'authorization-request',\n222: };\n223: \n224: export const FORM_LOADING_STATE = {\n225:   READY: 'ready',\n226:   INVALID: 'invalid',\n227:   ERROR: 'error',\n228:   LOADING: 'loading',\n229:   DONE: 'done',\n230: };\n\n\n-- ./src/constants/z-index.js\n1: import deepFreeze from '../lib/deep-freeze';\n2: // resizing concerns\n3: // -----------------\n4: // widget options top menu zIndex 10 as of 20190124.\n5: // click shield is zIndex 10 as of 20190124.\n6: // leadbox click shield is zIndex 11 as of 20190124.\n7: // Because they are 10 and 11, for resize to completely \"beat\" the widget options top menu\n8: // (only needed in the initial resize position), it has to also be higher than the click\n9: // shield, which is a no-go.\n10: const POP_UP_SHIELD = 11;\n11: const WIDGET_BOX = 1;\n12: const RESIZE_BOXES = WIDGET_BOX + 1;\n13: const RESIZE_BOXES_POP_UP = POP_UP_SHIELD;\n14: const DIALOG = 10001;\n15: \n16: // Do NOT export. Instead, tie leafs of the z-index tree to this and consume this value through the z-index tree.\n17: const SECTION_MENU = 13;\n18: const SITE_HEADER_LAYER = SECTION_MENU + 1;\n19: \n20: // Each stackingReason is one of the reasons stacking contexts get created.\n21: // If something has a z-index value AND has another reason\n22: // for being a stacking context other than having a z-index, put that other reason.\n23: \n24: // only exported for testing reasons\n25: export const stackingReasons = {\n26:   WEBKIT_OVERFLOW_SCROLLING: Symbol('-webkit-overflow-scrolling'),\n27:   CLIP_PATH: Symbol('clip-path'),\n28:   CONTAIN: Symbol('contain'),\n29:   FILTER: Symbol('filter'),\n30:   FIXED: Symbol('fixed'),\n31:   HTML: Symbol('html'),\n32:   ISOLATION: Symbol('isolation'),\n33:   MASK: Symbol('mask'),\n34:   MASK_BORDER: Symbol('mask-border'),\n35:   MASK_IMAGE: Symbol('mask-image'),\n36:   MIX_BLEND_MODE: Symbol('mix-blend-mode'),\n37:   OPACITY: Symbol('opacity'),\n38:   PERSPECTIVE: Symbol('perspective'),\n39:   STICKY: Symbol('sticky'),\n40:   TRANSFORM: Symbol('transform'),\n41:   WILL_CHANGE: Symbol('will-change'),\n42:   Z_INDEX: Symbol('z-index'),\n43: };\n44: \n45: const compositeEditorFragment = {\n46:   // add by spreading so that object depth doesn't get wonky.\n47:   compositeEditorMenu: {\n48:     value: 10,\n49:     reason: stackingReasons.Z_INDEX,\n50:     removeModal: {\n51:       value: 1,\n52:       reason: stackingReasons.Z_INDEX,\n53:       arrow: {\n54:         value: -1,\n55:         reason: stackingReasons.Z_INDEX,\n56:       },\n57:     },\n58:   },\n59: };\n60: \n61: export const nestedZIndex = deepFreeze({\n62:   value: null,\n63:   reason: stackingReasons.HTML,\n64:   mainNav: {\n65:     value: 2000,\n66:     reason: stackingReasons.Z_INDEX,\n67:     dialog: {\n68:       value: DIALOG,\n69:       reason: stackingReasons.Z_INDEX,\n70:     },\n71:   },\n72:   refreshOverlay: {\n73:     // Should beat everything, even other modals.\n74:     // This value could be 2000, except that\n75:     // ReactModal overlay's index is 9000,\n76:     // image asset modal is 9002,\n77:     // and integrations-modal is 10000\n78:     // :(\n79:     value: 10001,\n80:     reason: stackingReasons.Z_INDEX,\n81:   },\n82:   // two sideNav variables in case of drift between editors\n83:   // the z-index keeps it above the widget and other side bars\n84:   sideNav: {\n85:     value: 101,\n86:     reason: stackingReasons.Z_INDEX,\n87:   },\n88:   barSideNav: {\n89:     value: 101,\n90:     reason: stackingReasons.Z_INDEX,\n91:   },\n92:   floatingWidgetOptions: {\n93:     // must be at LEAST as high as all sibling contexts\n94:     value: 2000,\n95:     reason: stackingReasons.Z_INDEX,\n96:     select: {\n97:       value: 2001,\n98:       reason: stackingReasons.Z_INDEX,\n99:     },\n100:   },\n101:   infoCard: {\n102:     value: 1,\n103:     reason: stackingReasons.Z_INDEX,\n104:   },\n105:   sidePanes: {\n106:     value: 100,\n107:     reason: stackingReasons.Z_INDEX,\n108:     layoutPaneParent: {\n109:       value: 1,\n110:       reason: stackingReasons.TRANSFORM,\n111:       layoutPane: {\n112:         value: 1,\n113:         reason: stackingReasons.TRANSFORM,\n114:         colorPickerWindow: {\n115:           value: 100,\n116:           reason: stackingReasons.Z_INDEX,\n117:         },\n118:         colorSwatch: {\n119:           value: 1,\n120:           reason: stackingReasons.Z_INDEX,\n121:           colorSwatchBackground: {\n122:             value: 0,\n123:             reason: stackingReasons.Z_INDEX,\n124:           },\n125:         },\n126:       },\n127:     },\n128:     writingAssistantPane: {\n129:       value: 0,\n130:       reason: stackingReasons.Z_INDEX,\n131:       paneHeader: {\n132:         value: 2,\n133:         reason: stackingReasons.Z_INDEX,\n134:       },\n135:     },\n136:     pageStylePane: {\n137:       value: 0,\n138:       reason: stackingReasons.Z_INDEX,\n139:       navigationPillPlacer: {\n140:         value: 1,\n141:         reason: stackingReasons.Z_INDEX,\n142:       },\n143:       previewNavLinkDropzone: {\n144:         value: 1,\n145:         reason: stackingReasons.Z_INDEX,\n146:       },\n147:       navLinksExtraBottom: {\n148:         value: 2,\n149:         reason: stackingReasons.Z_INDEX,\n150:       },\n151:       paneHeader: {\n152:         value: 2,\n153:         reason: stackingReasons.Z_INDEX,\n154:       },\n155:     },\n156:     sectionPane: {\n157:       value: 0,\n158:       reason: stackingReasons.Z_INDEX,\n159:       sectionRadio: {\n160:         value: 1,\n161:         reason: stackingReasons.Z_INDEX,\n162:       },\n163:       categoryInput: {\n164:         value: 2,\n165:         reason: stackingReasons.Z_INDEX,\n166:       },\n167:     },\n168:   },\n169:   templatePane: {\n170:     value: 0,\n171:     reason: stackingReasons.Z_INDEX,\n172:     templateEditor: {\n173:       value: 0,\n174:       reason: stackingReasons.Z_INDEX,\n175:       sectionMenu: {\n176:         // has a ConfirmDelete nested in it, so it needs to beat deleteConfirmationSection\n177:         value: 13,\n178:         reason: stackingReasons.Z_INDEX,\n179:       },\n180:       deleteConfirmationSection: {\n181:         // beats resizeHandle\n182:         value: 12,\n183:         reason: stackingReasons.Z_INDEX,\n184:       },\n185:       deleteConfirmation: {\n186:         value: 1000,\n187:         reason: stackingReasons.Z_INDEX,\n188:       },\n189:       resizeBoxes: {\n190:         value: RESIZE_BOXES,\n191:         reason: stackingReasons.Z_INDEX,\n192:       },\n193:       resizeHandle: {\n194:         value: RESIZE_BOXES + 1,\n195:         reason: stackingReasons.Z_INDEX,\n196:       },\n197:       dropzoneComposite: {\n198:         value: 9,\n199:         reason: stackingReasons.Z_INDEX,\n200:         // value also implicitly used in the\n201:         // templatePane.templateEditor.dialog.activeLeadbox\n202:         // stacking context\n203:       },\n204:       dialog: {\n205:         value: DIALOG,\n206:         reason: stackingReasons.Z_INDEX,\n207:         activeLeadbox: {\n208:           value: 0,\n209:           reason: stackingReasons.TRANSFORM,\n210:           ...{\n211:             ...compositeEditorFragment,\n212:             compositeEditorMenu: {\n213:               ...compositeEditorFragment.compositeEditorMenu,\n214:               value: RESIZE_BOXES_POP_UP + 2, // Needs to be 1 higher than the resize handle\n215:             },\n216:           },\n217:           resizeBoxes: {\n218:             value: RESIZE_BOXES_POP_UP,\n219:             reason: stackingReasons.Z_INDEX,\n220:           },\n221:           resizeHandle: {\n222:             value: RESIZE_BOXES_POP_UP + 1,\n223:             reason: stackingReasons.Z_INDEX,\n224:           },\n225:         },\n226:       },\n227:       tooltip: {\n228:         value: 10003,\n229:         reason: stackingReasons.Z_INDEX,\n230:       },\n231:       reactWidgetOptionsContainer: {\n232:         value: Math.max(POP_UP_SHIELD, SITE_HEADER_LAYER),\n233:         reason: stackingReasons.Z_INDEX,\n234:       },\n235:       reactWidgetOptionsContainerPopup: {\n236:         value: DIALOG,\n237:         reason: stackingReasons.Z_INDEX,\n238:       },\n239: \n240:       // SITE SPECIFIC KEYS\n241:       siteHeader: {\n242:         value: SITE_HEADER_LAYER,\n243:         reason: stackingReasons.Z_INDEX,\n244:         swatchBackgroundHeaderOptions: {\n245:           value: -1,\n246:           reason: stackingReasons.Z_INDEX,\n247:         },\n248:         headerOptions: {\n249:           value: SITE_HEADER_LAYER + 1,\n250:           reason: stackingReasons.Z_INDEX,\n251:         },\n252:       },\n253:       addSiteHeaderCta: {\n254:         value: SITE_HEADER_LAYER,\n255:         reason: stackingReasons.Z_INDEX,\n256:       },\n257:       editHeaderWrapper: {\n258:         value: SITE_HEADER_LAYER,\n259:         reason: stackingReasons.Z_INDEX,\n260:       },\n261:       siteHeaderMobileNavTrigger: {\n262:         value: 9,\n263:         reason: stackingReasons.Z_INDEX,\n264:         // it needs to be above the widget and widget option it likely overlays\n265:       },\n266:       siteHeaderMobileNavTriggerOpen: {\n267:         value: 1,\n268:         reason: stackingReasons.Z_INDEX,\n269:         // when open, it needs to not poke out over the side nav it opened\n270:       },\n271:       siteHeaderCompositeControls: {\n272:         value: SITE_HEADER_LAYER + 1,\n273:         reason: stackingReasons.Z_INDEX,\n274:       },\n275:       leadboxShield: {\n276:         value: 9,\n277:         reason: stackingReasons.Z_INDEX,\n278:       },\n279:       stickyHeaderTrack: {\n280:         value: -1,\n281:         reason: stackingReasons.Z_INDEX,\n282:       },\n283:     },\n284:   },\n285: });\n286: \n287: // This idea is crucial to understanding z-indexes: \"Importantly, the z-index values of\n288: // [the parent's] child stacking contexts only have meaning in this parent.\n289: // Stacking contexts are treated atomically as a single unit in the parent stacking context.\"\n290: //\n291: // In this schema,\n292: // \"value\" is either a number or null. the only reserved key word in this schema.\n293: // \"reason\" must be one of the stackingReasons.\n294: // All other keys at any level of nesting should represent a new stacking context.\n295: // The root object is implicitly the html document itself.\n296: //\n297: // When adding to this schema, please add the parent contexts all the way back to html,\n298: // even if they are consumed / created in another place.\n299: // This will make for the least rework.\n300: // Also, this map is only as useful as it is accurate and complete.\n301: // It's primary purpose is to serve as a visualization of how z-indices impact each other.\n302: //\n303: // Ideally, nestedZIndex is the single source of truth for zIndex values on the js side.\n304: // So all usages of z-index in js would only read from the exported nestedZIndex object.\n305: // There would be a similar nested map on the SASS side.\n306: //\n307: // Re-use can be achieved by creating non-exported sub-objects,\n308: // and then using them as the values of context names,\n309: //\n310: // If something has a z-index value AND has another reason\n311: // for being a stacking context other than having a z-index, put that other reason.\n312: //\n313: // This schema is inspired by:\n314: // https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n315: // https://developer.mozilla.org/en-US/docs/Web/CSS/z-index\n316: // gwwar's z-context plugin for Chrome (https://github.com/gwwar/z-context)\n\n\n-- ./src/elements/builder/writingassistantpane/writingassistantpane.jsx\n1: import React, { useState, useEffect, useRef } from 'react';\n2: import PropTypes from 'prop-types';\n3: import makeStyles from '@material-ui/core/styles/makeStyles';\n4: import Box from '@material-ui/core/Box';\n5: import Tooltip from '@material-ui/core/Tooltip';\n6: import SvgIcon from '@material-ui/core/SvgIcon';\n7: import IconButton from '@material-ui/core/IconButton';\n8: import Button from '@material-ui/core/Button';\n9: import { connect } from 'react-redux';\n10: \n11: import useWritingAssistant from '../../../lib/hooks/useWritingAssistant';\n12: import Pane from '../../../components/panes/Pane';\n13: import PaneTabs from '../../../components/panes/PaneTabs';\n14: import PaneBody from '../../../components/panes/PaneBody';\n15: import PaneHeader from '../../../components/panes/PaneHeader';\n16: import PaneHeaderClose from '../../../components/panes/PaneHeaderClose';\n17: import CopyHistory from './CopyHistory';\n18: import GeneratedVariationsView from './GeneratedVariationsView';\n19: import GenerateVariantsButton from './GenerateVariantsButton';\n20: import WritingAssistantOptions from './WritingAssistantOptions';\n21: import UpgradeView from './UpgradeView';\n22: import { nestedZIndex } from '../../../constants/z-index';\n23: import { eventSources } from '../../../middlewares/events/helpers';\n24: import { paneTypes, writingAssistantTabs } from '../../../constants/types';\n25: import { ICONS, BUTTON_LABELS } from '../../../constants/text-controls';\n26: import useFocusedEditor from '../../../lib/hooks/useFocusedEditor';\n27: \n28: import * as actionTypes from '../../../action-creators/actions';\n29: import { updatePaneOptions } from '../../../action-creators/panes';\n30: import { selectPane } from '../../../lib/selectors/ui';\n31: import { getFeatureAccess, getIsAdvanced, getIsTrial } from '../../../lib/selectors/userInfo';\n32: import { getAiCopyFormInputs } from '../../../lib/selectors/aiCopy';\n33: import { VERBIAGES_WRITING_ASSISTANT as VERBIAGES } from '../../../verbiages';\n34: import usePane from '../../../lib/hooks/usePane';\n35: \n36: export const VARIANTS = 3;\n37: \n38: export const VIEW = {\n39:   FORM: 'form',\n40:   RESULTS: 'results',\n41:   UPGRADE: 'upgrade',\n42: };\n43: \n44: export const TABS = Object.values(writingAssistantTabs);\n45: \n46: // This is the height (in px) of the footer fixed the bottom of the screen\n47: // We are passing this value to the max height of the pane root and the footer to\n48: // ensure that the scroll bar stays inside visible content\n49: export const FOOTER_HEIGHT = 97;\n50: // width of the pane (in px) which is set on positionally fixed content\n51: // to prevent shifting on open. Most components inherit this from pane stylesheets.\n52: export const PANE_WIDTH = 408;\n53: \n54: const useStyles = makeStyles(({ palette, spacing }) => ({\n55:   paneHeader: {\n56:     backgroundColor: palette.legacy.blueDarker,\n57:     zIndex: nestedZIndex.sidePanes.writingAssistantPane.paneHeader.value,\n58:     position: 'fixed',\n59:     top: 0,\n60:     width: PANE_WIDTH,\n61:   },\n62:   formPane: {\n63:     marginTop: spacing(12),\n64:     // remove the height of the header and footer from the height of the scrollable content on the Copy tab and results view\n65:     // 144 is the height of the header (72) plus the default pane height adjustment (72)\n66:     maxHeight: props =>\n67:       props.activeTab === writingAssistantTabs.History\n68:         ? `calc(100vh - 144px)`\n69:         : `calc(100vh - ${144 + FOOTER_HEIGHT}px)`,\n70:   },\n71:   resultsPane: {\n72:     marginTop: spacing(12),\n73:     // remove the height of the header and footer from the height of the scrollable content\n74:     // 144 is the height of the header (72) plus the default pane height adjustment (72)\n75:     maxHeight: `calc(100vh - 144px)`,\n76:   },\n77: }));\n78: \n79: const HistoryControls = ({ controls, dispatchClickButtonEvent }) => (\n80:   <>\n81:     <Tooltip title={BUTTON_LABELS.UNDO} placement=\"bottom\" arrow>\n82:       <span>\n83:         <IconButton\n84:           aria-label={BUTTON_LABELS.UNDO}\n85:           data-qa-selector=\"pane-undo\"\n86:           disabled={!controls?.undo?.isActionable}\n87:           onClick={() => {\n88:             controls.undo.cmd();\n89:             dispatchClickButtonEvent(BUTTON_LABELS.UNDO);\n90:           }}\n91:           color=\"secondary\"\n92:         >\n93:           <SvgIcon component={ICONS.UNDO} />\n94:         </IconButton>\n95:       </span>\n96:     </Tooltip>\n97:     <Tooltip title={BUTTON_LABELS.REDO} placement=\"bottom\" arrow>\n98:       <span>\n99:         <IconButton\n100:           aria-label={BUTTON_LABELS.REDO}\n101:           disabled={!controls?.redo?.isActionable}\n102:           data-qa-selector=\"pane-redo\"\n103:           onClick={() => {\n104:             controls.redo.cmd();\n105:             dispatchClickButtonEvent(BUTTON_LABELS.REDO);\n106:           }}\n107:           color=\"secondary\"\n108:         >\n109:           <SvgIcon component={ICONS.REDO} />\n110:         </IconButton>\n111:       </span>\n112:     </Tooltip>\n113:   </>\n114: );\n115: \n116: const isFormEmpty = form => {\n117:   const found = Object.values(form).findIndex(input => input !== '');\n118:   if (found > -1) {\n119:     return false;\n120:   }\n121:   return true;\n122: };\n123: \n124: const WritingAssistantPane = ({\n125:   activeView,\n126:   initialFormData,\n127:   hasFeatureAccess,\n128:   showGetMoreCredits,\n129:   dispatchUpdateView,\n130:   dispatchViewFeature,\n131:   dispatchClickButtonEvent,\n132:   dispatchAiCopyInputs,\n133: }) => {\n134:   const [variants, setVariants] = useState([]);\n135:   const [creditDetailsOpen, setCreditDetailsOpen] = useState(false);\n136:   const [creditsUsedToGenerate, setCreditsUsedToGenerate] = useState(null);\n137:   const { editorControls: focusedEditor } = useFocusedEditor();\n138: \n139:   const { closePane, activeTab, onTabChange } = usePane({\n140:     paneType: paneTypes.AICOPY,\n141:     tabs: TABS,\n142:   });\n143: \n144:   const classes = useStyles({ activeTab });\n145: \n146:   const {\n147:     formInput,\n148:     loading,\n149:     disabled,\n150:     estimates,\n151:     creditsRemaining,\n152:     creditsTotal,\n153:     onSubmit,\n154:     handleInput,\n155:     copyHistory,\n156:     maxDescriptionLength,\n157:     onGetMoreCredits,\n158:   } = useWritingAssistant({\n159:     source: eventSources.WRITING_ASSISTANT_PANE,\n160:     buttonLabel: 'Generate variants',\n161:     variants: VARIANTS,\n162:     initialFormData: initialFormData || {\n163:       DESCRIPTION: '',\n164:       TONE: '',\n165:       USE_CASE: '',\n166:     },\n167:   });\n168: \n169:   const handleCreditDetailsToggle = open => {\n170:     setCreditDetailsOpen(open);\n171:   };\n172: \n173:   const handleSubmit = () => {\n174:     const onSuccess = results => {\n175:       setVariants(results.data);\n176:       setCreditsUsedToGenerate(results?.usage.total);\n177:       dispatchUpdateView(VIEW.RESULTS);\n178:     };\n179: \n180:     onSubmit(onSuccess);\n181:   };\n182: \n183:   const handleBack = () => {\n184:     dispatchUpdateView(VIEW.FORM);\n185:     dispatchClickButtonEvent('Back');\n186:   };\n187: \n188:   const handleClose = () => {\n189:     closePane();\n190:   };\n191: \n192:   const handleTabChange = (_, newValue) => {\n193:     // this check prevents duplicate clicks on the same tab logging to mixpanel\n194:     if (newValue !== activeTab) {\n195:       onTabChange(newValue);\n196:       dispatchClickButtonEvent(`${newValue} TAB`);\n197:     }\n198:   };\n199: \n200:   const handleClear = () => {\n201:     handleInput({\n202:       DESCRIPTION: '',\n203:       USE_CASE: '',\n204:       TONE: '',\n205:     });\n206:     dispatchClickButtonEvent('Clear');\n207:   };\n208: \n209:   useEffect(() => {\n210:     dispatchViewFeature();\n211: \n212:     // eslint-disable-next-line react-hooks/exhaustive-deps\n213:   }, []);\n214: \n215:   // store the form input in a ref so we can access it in the useEffect below\n216:   const formInputRef = useRef(formInput);\n217: \n218:   useEffect(() => {\n219:     formInputRef.current = formInput;\n220:   }, [formInput]);\n221: \n222:   useEffect(() => {\n223:     return () => dispatchAiCopyInputs(formInputRef.current);\n224:     // eslint-disable-next-line react-hooks/exhaustive-deps\n225:   }, []);\n226: \n227:   useEffect(() => {\n228:     if (!hasFeatureAccess) {\n229:       dispatchUpdateView(VIEW.UPGRADE);\n230:     }\n231:     // eslint-disable-next-line react-hooks/exhaustive-deps\n232:   }, [hasFeatureAccess]);\n233: \n234:   return (\n235:     <Pane className={activeView === VIEW.FORM ? classes.formPane : classes.resultsPane}>\n236:       <PaneHeader\n237:         className={classes.paneHeader}\n238:         title={activeView === VIEW.RESULTS ? VERBIAGES.TITLE.RESULTS : VERBIAGES.TITLE.FORM}\n239:         onBack={handleBack}\n240:         displayBack={activeView === VIEW.RESULTS}\n241:         onClose={handleClose}\n242:       >\n243:         <Box display=\"flex\" justifyContent=\"flex-end\">\n244:           {(activeView === VIEW.RESULTS || activeTab === writingAssistantTabs.History) && (\n245:             <HistoryControls\n246:               controls={focusedEditor?.controls || null}\n247:               dispatchClickButtonEvent={dispatchClickButtonEvent}\n248:             />\n249:           )}\n250:           {activeView === VIEW.FORM && activeTab === writingAssistantTabs.Copy && (\n251:             <Button disabled={isFormEmpty(formInput)} onClick={handleClear}>\n252:               Clear\n253:             </Button>\n254:           )}\n255: \n256:           <PaneHeaderClose onClose={handleClose} />\n257:         </Box>\n258:       </PaneHeader>\n259:       {activeView === VIEW.FORM && (\n260:         <>\n261:           <PaneBody>\n262:             <PaneTabs activeTab={activeTab} handleTabChange={handleTabChange} tabs={TABS} />\n263:             {activeTab === writingAssistantTabs.Copy && (\n264:               <WritingAssistantOptions\n265:                 creditsRemaining={creditsRemaining}\n266:                 creditsTotal={creditsTotal}\n267:                 showGetMoreCredits={showGetMoreCredits}\n268:                 formInput={formInput}\n269:                 onInput={handleInput}\n270:                 creditDetailsOpen={creditDetailsOpen}\n271:                 onCreditDetailsToggle={handleCreditDetailsToggle}\n272:                 maxDescriptionLength={maxDescriptionLength}\n273:                 onGetMoreCredits={onGetMoreCredits}\n274:               />\n275:             )}\n276: \n277:             {activeTab === writingAssistantTabs.History && (\n278:               <CopyHistory\n279:                 history={copyHistory}\n280:                 onTabChange={onTabChange}\n281:                 dispatchClickButtonEvent={dispatchClickButtonEvent}\n282:               />\n283:             )}\n284:           </PaneBody>\n285:           {activeTab === writingAssistantTabs.Copy && (\n286:             <GenerateVariantsButton\n287:               handleSubmit={handleSubmit}\n288:               loading={loading}\n289:               estimates={estimates}\n290:               disabled={disabled}\n291:             />\n292:           )}\n293:         </>\n294:       )}\n295:       {activeView === VIEW.RESULTS && (\n296:         <PaneBody>\n297:           <GeneratedVariationsView\n298:             variants={variants}\n299:             creditsUsedToGenerate={creditsUsedToGenerate}\n300:             dispatchClickButtonEvent={dispatchClickButtonEvent}\n301:           />\n302:         </PaneBody>\n303:       )}\n304:       {activeView === VIEW.UPGRADE && (\n305:         <PaneBody>\n306:           <UpgradeView />\n307:         </PaneBody>\n308:       )}\n309:     </Pane>\n310:   );\n311: };\n312: \n313: const mapStateToProps = state => ({\n314:   activeView: selectPane(state, paneTypes.AICOPY)?.options?.view || VIEW.FORM,\n315:   initialFormData: getAiCopyFormInputs(state),\n316:   hasFeatureAccess: getFeatureAccess(state).writingAssistant,\n317:   // show the CTA unless the user is advanced and not in trial\n318:   showGetMoreCredits: !getIsAdvanced(state) || getIsTrial(state),\n319: });\n320: \n321: const mapDispatchToProps = dispatch => ({\n322:   dispatchViewFeature: () => {\n323:     dispatch({\n324:       type: actionTypes.VIEWED_FEATURE,\n325:       meta: {\n326:         source: eventSources.WRITING_ASSISTANT_PANE,\n327:         eventProperties: { Feature: 'Writing Assistant' },\n328:       },\n329:     });\n330:   },\n331:   dispatchClickButtonEvent: (text, data) => {\n332:     dispatch({\n333:       type: actionTypes.CLICKED_BUTTON,\n334:       meta: {\n335:         source: eventSources.WRITING_ASSISTANT_PANE,\n336:         eventProperties: { 'Button label': text, ...data },\n337:       },\n338:     });\n339:   },\n340:   dispatchUpdateView: view => dispatch(updatePaneOptions(paneTypes.AICOPY, { view })),\n341:   dispatchAiCopyInputs: data => {\n342:     dispatch({\n343:       type: actionTypes.SAVE_AICOPY_FORM_INPUTS,\n344:       payload: data,\n345:     });\n346:   },\n347: });\n348: \n349: WritingAssistantPane.propTypes = {\n350:   activeView: PropTypes.string.isRequired,\n351:   initialFormData: PropTypes.shape({\n352:     description: PropTypes.string,\n353:     tone: PropTypes.string,\n354:     useCase: PropTypes.string,\n355:   }),\n356:   dispatchUpdateView: PropTypes.func.isRequired,\n357:   dispatchClickButtonEvent: PropTypes.func.isRequired,\n358:   dispatchViewFeature: PropTypes.func.isRequired,\n359:   dispatchAiCopyInputs: PropTypes.func.isRequired,\n360:   hasFeatureAccess: PropTypes.bool,\n361:   showGetMoreCredits: PropTypes.bool.isRequired,\n362: };\n363: \n364: WritingAssistantPane.defaultProps = {\n365:   initialFormData: null,\n366:   hasFeatureAccess: false,\n367: };\n368: \n369: HistoryControls.propTypes = {\n370:   // eslint-disable-next-line no-undef -- we aren't specifying this shape anywhere\n371:   controls: PropTypes.shape({}),\n372:   dispatchClickButtonEvent: PropTypes.func.isRequired,\n373: };\n374: \n375: HistoryControls.defaultProps = {\n376:   controls: null,\n377: };\n378: \n379: export default connect(\n380:   mapStateToProps,\n381:   mapDispatchToProps,\n382: )(WritingAssistantPane);\n\n\n-- ./src/lib/hooks/useFocusedEditor.js\n1: import { useState, useEffect } from 'react';\n2: \n3: class FocusedEditorEventTarget extends EventTarget {\n4:   setSharedState(newState) {\n5:     this.dispatchEvent(new CustomEvent('update', { detail: newState }));\n6:   }\n7: }\n8: \n9: const focusedEditorEventTarget = new FocusedEditorEventTarget();\n10: \n11: let editorSharedState = null;\n12: \n13: const useFocusedEditor = () => {\n14:   const [editorControls, setEditorControls] = useState(editorSharedState);\n15: \n16:   // subscribe a handler that sets component state to the event that the shared state is updated\n17:   useEffect(() => {\n18:     const handleUpdate = event => {\n19:       editorSharedState = event.detail;\n20:       setEditorControls(editorSharedState);\n21:     };\n22: \n23:     focusedEditorEventTarget.addEventListener('update', handleUpdate);\n24: \n25:     return () => {\n26:       focusedEditorEventTarget.removeEventListener('update', handleUpdate);\n27:     };\n28:   }, []);\n29: \n30:   const setFocusedEditorControls = focusedEditorEventTarget.setSharedState.bind(\n31:     focusedEditorEventTarget,\n32:   );\n33: \n34:   // expose the current state and the method by which an event can be fired to update state\n35:   return { editorControls, setFocusedEditorControls };\n36: };\n37: \n38: export default useFocusedEditor;\n\n\n-- ./src/lib/hooks/usePane.js\n1: import debounce from 'lodash/debounce';\n2: import { useState, useCallback } from 'react';\n3: import { useSelector, useDispatch } from 'react-redux';\n4: import * as actions from '../../action-creators/actions';\n5: import { getImageProperties } from '../../middlewares/events/helpers';\n6: import { selectActiveContentKind } from '../selectors/foundry';\n7: import {\n8:   selectActiveContentId,\n9:   selectActivePaneTab,\n10:   selectExtraPaneData,\n11:   selectPane,\n12:   selectPaneDisablesHistory,\n13: } from '../selectors/ui';\n14: \n15: export default ({ paneType, tabs }) => {\n16:   const dispatch = useDispatch();\n17:   const [loadingState, setLoadingState] = useState({ isLoading: false, isSuccess: false });\n18:   const [isDirty, setIsDirty] = useState(false);\n19: \n20:   const contentId = useSelector(selectActiveContentId);\n21:   const contentKind = useSelector(selectActiveContentKind);\n22:   const activeTab = useSelector(\n23:     state => selectActivePaneTab(state, paneType, contentKind) || tabs?.[0],\n24:   );\n25: \n26:   const setIsLoading = useCallback(() => {\n27:     setLoadingState({ isLoading: true, isSuccess: false });\n28:   }, []);\n29: \n30:   const setIsSuccess = useCallback(() => {\n31:     setLoadingState({ isLoading: false, isSuccess: true });\n32:   }, []);\n33: \n34:   const showDeletePrompt = useSelector(\n35:     state => !!selectPane(state, paneType)?.flags?.showDeletePrompt,\n36:   );\n37: \n38:   const paneDisablesHistory = useSelector(selectPaneDisablesHistory);\n39: \n40:   const extraPaneData = useSelector(state => selectExtraPaneData(state, paneType));\n41: \n42:   const onTabChange = useCallback(\n43:     tab => {\n44:       dispatch({\n45:         type: actions.SET_ACTIVE_PANE_TAB,\n46:         name: paneType,\n47:         tab,\n48:         contentKind,\n49:       });\n50:     },\n51:     [dispatch, paneType, contentKind],\n52:   );\n53: \n54:   const closePane = useCallback(() => {\n55:     dispatch({\n56:       type: actions.CLOSE_PANE,\n57:       name: paneType,\n58:     });\n59:   }, [dispatch, paneType]);\n60: \n61:   const toggleDeletePrompt = useCallback(() => {\n62:     dispatch({\n63:       type: actions.TOGGLE_DELETE_PROMPT,\n64:       name: paneType,\n65:     });\n66:   }, [dispatch, paneType]);\n67: \n68:   const handleAttemptClose = useCallback(() => {\n69:     if (!isDirty) {\n70:       closePane();\n71:       return;\n72:     }\n73: \n74:     toggleDeletePrompt();\n75:   }, [closePane, isDirty, toggleDeletePrompt]);\n76: \n77:   const updateDraftSettings = useCallback(\n78:     (data, milestone) => {\n79:       dispatch({\n80:         type: actions.UPDATE_DRAFT_SETTINGS,\n81:         payload: {\n82:           contentId,\n83:           data,\n84:         },\n85:         ...(milestone && { milestone }),\n86:       });\n87:     },\n88:     [contentId, dispatch],\n89:   );\n90: \n91:   const updateDraftSetting = useCallback(\n92:     debounce((name, value, milestone) => {\n93:       const path = name.split('.');\n94:       dispatch({\n95:         type: actions.UPDATE_DRAFT_SETTING,\n96:         payload: {\n97:           contentId,\n98:           path,\n99:           value,\n100:         },\n101:         ...(milestone && { milestone }),\n102:       });\n103:     }, 200),\n104:     [contentId, dispatch],\n105:   );\n106: \n107:   const updatePaneDirty = useCallback(\n108:     isFormDirty => {\n109:       dispatch({\n110:         type: actions.UPDATE_PANE_OPTIONS,\n111:         name: paneType,\n112:         options: {\n113:           needsSave: isFormDirty,\n114:         },\n115:       });\n116:       setIsDirty(isFormDirty);\n117:     },\n118:     [dispatch, paneType],\n119:   );\n120: \n121:   const updateHistoryDisabled = useCallback(\n122:     historyDisabled => {\n123:       dispatch({\n124:         type: actions.UPDATE_PANE_OPTIONS,\n125:         name: paneType,\n126:         options: {\n127:           historyDisabled,\n128:         },\n129:       });\n130:     },\n131:     [dispatch, paneType],\n132:   );\n133: \n134:   const updateImage = useCallback(\n135:     (image, imageType) => {\n136:       const eventProperties = getImageProperties(image, imageType);\n137:       dispatch({\n138:         type: actions.UPDATE_IMAGE,\n139:         meta: { source: paneType, eventProperties },\n140:       });\n141:     },\n142:     [dispatch, paneType],\n143:   );\n144: \n145:   return {\n146:     closePane,\n147:     handleAttemptClose,\n148:     showDeletePrompt,\n149:     toggleDeletePrompt,\n150:     updateDraftSetting,\n151:     updateDraftSettings,\n152:     updatePaneDirty,\n153:     updateImage,\n154:     isPaneDirty: isDirty,\n155:     activeTab,\n156:     onTabChange,\n157:     setIsLoading,\n158:     setIsSuccess,\n159:     loadingState,\n160:     setLoadingState,\n161:     paneDisablesHistory,\n162:     updateHistoryDisabled,\n163:     extraPaneData,\n164:   };\n165: };\n\n\n-- ./src/lib/hooks/useWritingAssistant.js\n1: import { useEffect, useState, useCallback } from 'react';\n2: import { useSelector, useDispatch } from 'react-redux';\n3: import PropTypes from 'prop-types';\n4: import * as Sentry from '@sentry/browser';\n5: import { Config } from '@lp/config';\n6: \n7: import {\n8:   getAiCopyCreditsAllotted,\n9:   getAiCopyCreditsRemaining,\n10:   getAiCopyHistory,\n11:   getHasHistoryError,\n12:   getHasCreditsError,\n13: } from '../selectors/aiCopy';\n14: import { getIsTrial, getPlanLevel, getSubscriptionLength } from '../selectors/userInfo';\n15: import { updateUserHistory } from '../../apis/aicopy-history-api';\n16: import { generateCopy } from '../../apis/aicopy-api';\n17: import * as actionTypes from '../../action-creators/actions';\n18: import { dispatchToastAction, updateAiCopyCreditsAction } from '../../action-creators/ai-copy';\n19: import { VERBIAGES_AICOPY_ERROR_MESSAGES as VERBIAGES } from '../../verbiages';\n20: import { useCaseOptions } from '../../components/AiCopy/AiCopySelectionOptions';\n21: import { getHttpError, getHttpErrorCode } from '../../apis/utils';\n22: \n23: const config = Config.getInstance();\n24: \n25: export const creditEstimates = {\n26:   PROMPT: 10,\n27:   // the estimated completion credits needed to generate ONE variant\n28:   // see script in ai-copy\n29:   HEADLINE: {\n30:     high: 22,\n31:     low: 13,\n32:   },\n33:   CTA: {\n34:     high: 11,\n35:     low: 6,\n36:   },\n37:   SUMMARY: {\n38:     high: 93,\n39:     low: 49,\n40:   },\n41:   EXPAND: {\n42:     high: 133,\n43:     low: 100,\n44:   },\n45: };\n46: \n47: export const DESCRIPTION_MAX_INPUT = {\n48:   DEFAULT: 255,\n49:   SUMMARY: 750,\n50: };\n51: \n52: /**\n53:  * The useWritingAssistant hook supports all implementations of the Writing Assistants\n54:  * base features - management of the form inputs, credit estimates, enabling/disabling\n55:  * copy generation, generating copy and deducting credits, etc.\n56:  *\n57:  * @params:\n58:  * initialFormData - pass an object that acts as the initial state for the formInput (DESCRIPTION and USE_CASE are required)\n59:  * source - event source for mixpanel tracking\n60:  * buttonLabel {string} - button label for mixpanel tracking\n61:  * variants {number} - variants that should be generated - this impacts completion and estimates\n62:  *\n63:  * @returns:\n64:  * disabled {boolean} - should generation be disabled based on input data and credits\n65:  * loading {boolean} - is copy being generated\n66:  * estimates {high: number, low: number} - credit estimates based on input data\n67:  * formInput {object} - current state of form data\n68:  * creditsRemaining {number} - current credits remaining\n69:  * creditsTotal {number} - total number of credits for plan type\n70:  * onSubmit {function} - function to call to generate variants (wrap this in your own handler)\n71:  * handleInput {function} - updates formInput state if the property exists in initialFormData\n72:  * copyHistory {array} - history of generated copy\n73:  * maxDescriptionLength {number} - max length of description given the use case selected\n74:  * hasCreditsApiError {boolean} - encountered a credits api error\n75:  * hasHistoryApiError {boolean} - encountered a history api error\n76:  * onGetMoreCredits {function} - event handler for when a user clicks a call to action to get more credits\n77:  */\n78: \n79: function useWritingAssistant({ initialFormData, source, variants, buttonLabel }) {\n80:   const creditsRemaining = useSelector(getAiCopyCreditsRemaining);\n81:   const creditsTotal = useSelector(getAiCopyCreditsAllotted);\n82:   const hasCreditsApiError = useSelector(getHasCreditsError);\n83:   const copyHistory = useSelector(getAiCopyHistory);\n84:   const hasHistoryApiError = useSelector(getHasHistoryError);\n85:   const isTrial = useSelector(getIsTrial);\n86:   const planLevel = useSelector(getPlanLevel);\n87:   const planPeriod = useSelector(getSubscriptionLength);\n88: \n89:   const [loading, setLoading] = useState(false);\n90:   const [disabled, setDisabled] = useState(true);\n91:   const [maxDescriptionLength, setMaxDescriptitonLength] = useState(DESCRIPTION_MAX_INPUT.DEFAULT);\n92:   const [estimates, setEstimates] = useState(null);\n93:   const [formInput, setFormInput] = useState(initialFormData);\n94: \n95:   const dispatch = useDispatch();\n96: \n97:   const dispatchClickButtonEvent = data => {\n98:     dispatch({\n99:       type: actionTypes.CLICKED_BUTTON,\n100:       meta: {\n101:         source,\n102:         eventProperties: { 'Button label': buttonLabel, ...data },\n103:       },\n104:     });\n105:   };\n106: \n107:   const dispatchCreditUpdate = credits => {\n108:     dispatch(updateAiCopyCreditsAction(credits));\n109:   };\n110:   const dispatchToast = (message, type, duration = 7000) => {\n111:     dispatch(dispatchToastAction(message, type, duration));\n112:   };\n113: \n114:   const dispatchCopyHistoryUpdate = copy => {\n115:     dispatch({\n116:       type: actionTypes.UPDATE_AICOPY_HISTORY,\n117:       payload: copy,\n118:     });\n119:   };\n120: \n121:   const updateCopyHistory = async data => {\n122:     try {\n123:       const response = await updateUserHistory(data);\n124:       dispatchCopyHistoryUpdate({ data: response.contents.history });\n125:     } catch (e) {\n126:       // swallow the error - current history will remain unchanged\n127:       Sentry.addBreadcrumb({\n128:         category: 'aicopy-warehouse-update',\n129:         message: 'failed to update user history',\n130:         level: Sentry.Severity.Error,\n131:       });\n132:       Sentry.captureException(e);\n133:     }\n134:   };\n135: \n136:   // generate copy using the formInput data and variants requested\n137:   // call the passed in function if copy generation is successful\n138:   const onSubmit = async (onSuccess, randomizeTone = false) => {\n139:     setLoading(true);\n140: \n141:     try {\n142:       const results = await generateCopy({\n143:         description: formInput.DESCRIPTION,\n144:         useCase: formInput.USE_CASE,\n145:         tone: formInput?.TONE || null,\n146:         variants,\n147:         randomizeTone,\n148:         isTrial,\n149:         planLevel,\n150:         planPeriod,\n151:       });\n152: \n153:       // If the original description was all caps, set the new variants to all caps\n154:       if (formInput.DESCRIPTION.toUpperCase() === formInput.DESCRIPTION) {\n155:         results.data = results.data.map(variant => variant.toUpperCase());\n156:       }\n157: \n158:       onSuccess(results);\n159:       dispatchCreditUpdate(results.creditBalance);\n160:       updateCopyHistory(results.data);\n161: \n162:       const mixpanelData = {\n163:         'Credits estimated high': estimates?.high,\n164:         'Credits estimated low': estimates?.low,\n165:         'Credits used': results.usage.total,\n166:         'Use case': formInput.USE_CASE,\n167:         'Credits remaining': results.creditBalance.creditsRemaining,\n168:         Variations: variants,\n169:       };\n170:       // conditionally add other selections to the payload if they exist\n171:       if (formInput?.TONE) {\n172:         mixpanelData.Tone = formInput.TONE;\n173:       }\n174:       if (results.creditBalance.creditsRemaining < 0) {\n175:         mixpanelData['Credits exceeded'] = results.creditBalance.creditsRemaining;\n176:       }\n177: \n178:       dispatchClickButtonEvent(mixpanelData);\n179:     } catch (e) {\n180:       // eslint-disable-next-line no-console\n181:       console.error('Error generating copy', e);\n182:       let errorMessage = VERBIAGES.ERROR; // Default error message\n183:       const errorCode = getHttpErrorCode(e);\n184:       if (errorCode === 400) {\n185:         // Show the error message from the API for 400 errors\n186:         errorMessage = getHttpError(e);\n187:         // If the error message is an object, extract the message property\n188:         errorMessage = errorMessage.message ? errorMessage.message : errorMessage;\n189:       }\n190:       dispatchToast(errorMessage, 'error');\n191:     }\n192: \n193:     setLoading(false);\n194:   };\n195: \n196:   // update one of the formInputs if it exists in the initial form data\n197:   const handleInput = useCallback(\n198:     updates => {\n199:       // check if all of the form field updates are in the initial form data\n200:       // this safegaurds adding data to the form input that was not initially declared\n201:       const canUpdate = Object.keys(updates).every(key => key in initialFormData);\n202: \n203:       if (canUpdate) {\n204:         setFormInput(state => ({ ...state, ...updates }));\n205:       }\n206:     },\n207:     [initialFormData],\n208:   );\n209: \n210:   const onGetMoreCredits = useCallback(() => {\n211:     let url = `${config.get('LP_HOST')}/my-account/billing/`;\n212:     if (!isTrial) {\n213:       url += '?upgrade=1';\n214:     }\n215: \n216:     window.open(url);\n217:   }, [isTrial]);\n218: \n219:   // all of the conditions that block a user from generating copy\n220:   const canUserGenerateCopy = useCallback(\n221:     data => {\n222:       if (\n223:         !hasCreditsApiError &&\n224:         creditsRemaining > 0 &&\n225:         data.DESCRIPTION.length <= maxDescriptionLength &&\n226:         data.DESCRIPTION !== '' &&\n227:         data.USE_CASE !== ''\n228:       ) {\n229:         return true;\n230:       }\n231:       return false;\n232:     },\n233:     [maxDescriptionLength, creditsRemaining, hasCreditsApiError],\n234:   );\n235: \n236:   useEffect(() => {\n237:     if (canUserGenerateCopy(formInput)) {\n238:       const prompt = creditEstimates.PROMPT + formInput.DESCRIPTION.length / 4;\n239: \n240:       setDisabled(false);\n241:       setEstimates({\n242:         high: Math.round(prompt + variants * creditEstimates[formInput.USE_CASE].high),\n243:         low: Math.round(prompt + variants * creditEstimates[formInput.USE_CASE].low),\n244:       });\n245:     } else {\n246:       setDisabled(true);\n247:       setEstimates(null);\n248:     }\n249:   }, [formInput, variants, canUserGenerateCopy]);\n250: \n251:   useEffect(() => {\n252:     const maxLength =\n253:       formInput.USE_CASE === useCaseOptions.SUMMARY\n254:         ? DESCRIPTION_MAX_INPUT.SUMMARY\n255:         : DESCRIPTION_MAX_INPUT.DEFAULT;\n256: \n257:     setMaxDescriptitonLength(maxLength);\n258:   }, [formInput]);\n259: \n260:   return {\n261:     formInput,\n262:     loading,\n263:     disabled,\n264:     estimates,\n265:     creditsRemaining: hasCreditsApiError ? 0 : creditsRemaining,\n266:     creditsTotal: hasCreditsApiError ? 0 : creditsTotal,\n267:     maxDescriptionLength,\n268:     onSubmit,\n269:     handleInput,\n270:     copyHistory,\n271:     hasHistoryApiError,\n272:     hasCreditsApiError,\n273:     onGetMoreCredits,\n274:   };\n275: }\n276: \n277: useWritingAssistant.propTypes = {\n278:   source: PropTypes.string.isRequired,\n279:   validateFormData: PropTypes.func.isRequired,\n280:   initialFormData: PropTypes.shape({\n281:     DESCRIPTION: PropTypes.string.isRequired,\n282:     USE_CASE: PropTypes.string.isRequired,\n283:   }).isRequired, // open ended\n284:   variants: PropTypes.number.isRequired,\n285:   buttonLabel: PropTypes.string.isRequired,\n286: };\n287: \n288: export default useWritingAssistant;\n\n\n-- ./src/lib/selectors/aiCopy.js\n1: export const getAiCopyCreditsAllotted = state => state.aiCopy.credits.creditsAllotted ?? null;\n2: export const getAiCopyCreditsRemaining = state => state.aiCopy.credits.creditsRemaining ?? null;\n3: export const getHasCreditsError = state => !!state.aiCopy.credits.error;\n4: export const getAiCopyFormInputs = state => state.aiCopy.formInputs;\n5: export const getAiCopyHistory = state => state.aiCopy.history?.data || [];\n6: export const getHasHistoryError = state => !!state.aiCopy.history?.error;\n\n\n-- ./src/lib/selectors/ui.js\n1: import { createSelector } from 'reselect';\n2: import { getInPath } from '../get-in-path';\n3: \n4: const emptyLeadpages = Object.freeze([]);\n5: \n6: export const selectActiveContentPath = state => state.ui.activeContentPath;\n7: export const selectActiveContentId = state => state.ui.activeContentPath[1];\n8: export const selectBrandColors = state => state.ui?.brand?.colors || null;\n9: export const selectClickShield = state => state.ui.clickShield;\n10: export const selectHelp = state => state.ui.help;\n11: export const selectIsTemplateLoading = state => state.ui.templateLoading;\n12: export const selectJustCreated = state => state.ui.justCreated;\n13: export const selectLeadRankDisplayOptions = state => state.ui.leadRankDisplayOptions;\n14: export const selectIsLeadRankLoaded = state => state.ui.isLeadRankLoaded;\n15: export const selectLeadpages = state => state.ui.leadpages || emptyLeadpages;\n16: export const selectPane = (state, name) => state.ui.panes[name];\n17: export const selectPaneOptions = (state, name) => state.ui.panes?.[name]?.options;\n18: export const selectExtraPaneData = (state, name) => state.ui.panes?.[name]?.extra;\n19: export const selectPanes = state => state.ui.panes;\n20: export const selectPreview = state => state.ui.preview;\n21: export const selectPublishing = state => state.ui.publishing;\n22: export const selectRefreshRequired = state => !!state.ui?.connection?.refreshRequired;\n23: export const selectResize = state => state.ui.resize;\n24: export const selectResizeVertical = state => state.ui.resizeVertical;\n25: export const selectSiteHeaderLayout = state => state.ui.siteHeaderLayout;\n26: export const selectWaitingForSave = state => state.ui.waitingForSave;\n27: export const selectWidgetOptions = state => state.ui.widgetOptions;\n28: export const selectWidgetOptionsInitialView = state => state.ui.widgetOptions?.active;\n29: export const selectFullModal = state => state.ui.fullModal;\n30: export const selectModal = state => state.ui?.modal;\n31: export const selectModalKind = state => state.ui?.modal?.kind;\n32: export const selectChecklist = state => state.ui?.checklist;\n33: export const selectIsLiveChatOnline = state => state.ui?.isLiveChatOnline;\n34: \n35: export const selectActivePaneTab = (state, paneType, contentKind) => {\n36:   return state.ui?.activePaneTabs?.[contentKind]?.[paneType] || null;\n37: };\n38: \n39: // Redeclare selectCore rather than import to avoid circular dependencies (and failing tests)\n40: export const selectCore = ({ core }) => core;\n41: \n42: export const selectEditingWidget = createSelector(\n43:   selectCore,\n44:   selectWidgetOptions,\n45:   (core, widgetOptions) => {\n46:     const path = core.boxPaths[widgetOptions.guid];\n47:     if (path) {\n48:       return getInPath(core, path.split('/'));\n49:     }\n50:     return undefined;\n51:   },\n52: );\n53: \n54: export const selectFocusedCompositeGuid = state => selectClickShield(state)?.guid;\n55: \n56: export const selectShowDeletePrompt = (appState, pane) => {\n57:   const panes = selectPanes(appState);\n58:   return panes?.[pane]?.flags?.showDeletePrompt;\n59: };\n60: \n61: const emptyContentPath = Object.freeze([]);\n62: const selectPendingContentPath = state => state.ui.pendingContentPath || emptyContentPath;\n63: \n64: export const selectPendingContentId = createSelector(\n65:   selectPendingContentPath,\n66:   path => (path.length > 1 ? path[1] : ''),\n67: );\n68: \n69: export const selectActivePane = createSelector(\n70:   selectPanes,\n71:   panes => {\n72:     if (!panes) {\n73:       return null;\n74:     }\n75:     const paneKey = Object.keys(panes)[0] || '';\n76:     return panes[paneKey] || null;\n77:   },\n78: );\n79: \n80: export const selectActivePaneType = state => Object.keys(selectPanes(state))[0] || '';\n81: \n82: export const selectPaneDisablesHistory = createSelector(\n83:   selectActivePane,\n84:   activePane => !!activePane?.options?.historyDisabled,\n85: );\n\n\n-- ./src/lib/selectors/userInfo.js\n1: import { createSelector } from 'reselect';\n2: import { Config } from '@lp/config';\n3: \n4: import { PLAN_LEVEL } from '../../constants/plans';\n5: \n6: const config = Config.getInstance();\n7: \n8: export const selectUserInfo = ({ userInfo }) => userInfo;\n9: \n10: export const getUserEmail = state => state.userInfo.email;\n11: export const getFeatureAccess = state => state.userInfo.featureAccess;\n12: export const getUserUuid = state => state.userInfo.userUuid;\n13: export const getHasFeedbackAccess = state => state.userInfo.hasFeedbackAccess;\n14: export const getHasPhoneSupport = state => state.userInfo.hasPhoneSupport;\n15: export const getSubDomain = state => state.userInfo.subDomain;\n16: export const getIsAdmin = state => state.userInfo.isAdmin;\n17: export const getIsTrial = state => state.userInfo.isTrial;\n18: export const getSubscriptionLength = state => state.userInfo.subscription_length;\n19: \n20: const getIsBasic = state => state.userInfo.is_basic; // legacy plan level\n21: const getIsStandard = state => state.userInfo.is_standard;\n22: const getIsPro = state => state.userInfo.is_pro;\n23: export const getIsAdvanced = state => state.userInfo.is_enterprise;\n24: export const getPlanLevel = state => {\n25:   if (getIsAdvanced(state)) {\n26:     return PLAN_LEVEL.ADVANCED;\n27:   }\n28:   if (getIsPro(state)) {\n29:     return PLAN_LEVEL.PRO;\n30:   }\n31:   if (getIsStandard(state)) {\n32:     return PLAN_LEVEL.STANDARD;\n33:   }\n34:   if (getIsBasic(state)) {\n35:     return PLAN_LEVEL.BASIC;\n36:   }\n37:   return PLAN_LEVEL.STANDARD;\n38: };\n39: \n40: // NOTE: This doesn't determine if an account can actually change plans.\n41: // Just whether or not there would be plan upgrades available to the account.\n42: export const getCanUpgrade = state => {\n43:   /* eslint-disable camelcase */\n44:   if (state.userInfo?.is_enterprise) {\n45:     return !!(state.userInfo?.subscription_length === 'month');\n46:   }\n47:   /* eslint-enable camelcase */\n48:   return !state.userInfo?.isAdmin;\n49: };\n50: \n51: export const selectAvailableDomains = createSelector(\n52:   selectUserInfo,\n53:   userInfo =>\n54:     [`${userInfo.subDomain}.${config.get('USER_PUBLISH_DOMAIN')}`].concat(\n55:       (userInfo.customDomains || []).map(cd => cd.domain),\n56:     ),\n57: );\n58: \n59: export const selectWidgetLanguage = createSelector(\n60:   selectUserInfo,\n61:   userInfo => userInfo?.widgetLanguage,\n62: );\n\n\n-- ./src/middlewares/events/helpers.js\n1: import PropTypes from 'prop-types';\n2: import { contentTypes } from '@lp/crucible/dist/constants/types';\n3: import { createSelector } from 'reselect';\n4: \n5: import { getBoxByGuid } from '../../lib/state-helpers';\n6: import { selectActiveEntity, selectRootContentEntity } from '../../lib/selectors/foundry';\n7: import { selectForms } from '../../lib/selectors/forms';\n8: import * as actions from '../../action-creators/actions';\n9: \n10: export const eventTypes = {\n11:   [actions.ADD_COLUMN_TO_LAYOUT]: 'Added column',\n12:   [actions.ADD_LAYOUT_TO_SECTION]: 'Added layout',\n13:   [actions.ADD_SECTION_TO_PAGE]: 'Added section',\n14:   [actions.ADD_SECTION_TEMPLATE]: 'Added section',\n15:   [actions.INSERT_SECTION_TEMPLATE]: 'Added section template',\n16:   [actions.SWAP_SECTION_TEMPLATE]: 'Swapped section template',\n17:   [actions.SAVE_SECTION_TEMPLATE]: 'Saved section template',\n18:   [actions.DUPLICATE_LAYOUT]: 'Duplicated layout',\n19:   [actions.DUPLICATE_COLUMN]: 'Duplicated column',\n20:   [actions.DUPLICATE_SECTION]: 'Duplicated section',\n21:   [actions.COPY_SECTION]: 'Copied section',\n22:   [actions.PASTE_SECTION]: 'Pasted section',\n23:   [actions.REMOVE_LAYOUT]: 'Deleted layout',\n24:   [actions.REMOVE_COLUMN]: 'Deleted column',\n25:   [actions.REMOVE_SECTION]: 'Deleted section',\n26:   [actions.MOVE_COLUMN]: 'Moved column',\n27:   [actions.MOVE_LAYOUT]: 'Moved layout',\n28:   [actions.LEAD_RANK_DISPLAY_OPTIONS_SAVE]: 'Changed Leadmeter display settings',\n29:   [actions.LOAD_CONTENT_DRAFT]: 'Loaded builder asset',\n30:   [actions.ORDER_SECTIONS_BY_GUID]: 'Reordered sections',\n31:   [actions.PUBLISH_SUCCESS]: 'Published builder asset',\n32:   [actions.SET_BOX_NAME_BY_GUID]: 'Updated {level} name', // {level} is replaced in middleware based on box type\n33:   [actions.SET_USER_INFO]: 'Set user information',\n34:   [actions.SPLICE_NEW_WIDGET_AT_PATH]: 'Added widget',\n35:   [actions.UPDATE_ASSET_LANGUAGE]: 'Updated asset widget language',\n36:   [actions.UPDATE_IMAGE]: 'Updated image',\n37:   [actions.OPEN_MODAL]: 'Opened modal',\n38:   [actions.CLOSE_MODAL]: 'Closed modal',\n39:   [actions.CLICKED_BUTTON]: 'Clicked button',\n40:   [actions.VIEWED_FEATURE]: 'Viewed feature',\n41:   [actions.UNDO_STATE]: 'Clicked button',\n42:   [actions.REDO_STATE]: 'Clicked button',\n43: };\n44: \n45: export const eventSources = {\n46:   BUTTON_WIDGET: 'Button widget options',\n47:   KEYBOARD_SHORTCUT: 'Keyboard shortcut',\n48:   LAYOUT_PANE: 'Layout pane',\n49:   PAGE_STYLE_PANE: 'Page style pane',\n50:   SECTION_PANE: 'Section pane',\n51:   SECTION_FLYOUT: 'Section flyout',\n52:   SECTION_HOVER_BUTTON: 'Section hover button',\n53:   SECTION_EDITOR: 'Section editor',\n54:   TEXT_WIDGET: 'Text widget options',\n55:   TOP_MENU: 'Top menu',\n56:   WRITING_ASSISTANT_PANE: 'Writing assistant pane',\n57: };\n58: \n59: export const colorEventTypes = {\n60:   backgroundColor: 'background color',\n61:   backgroundColorOverlay: 'overlay color',\n62: };\n63: \n64: // Remaps values for the 'Text type' Mixpanel event property\n65: export function remapTextType(originalTextType) {\n66:   switch (originalTextType) {\n67:     case 'headline':\n68:       return 'H1';\n69:     case 'subhead':\n70:       return 'H2';\n71:     case 'small-subhead':\n72:       return 'H3';\n73:     case 'paragraph':\n74:       return 'Normal Text';\n75:     default:\n76:       return originalTextType;\n77:   }\n78: }\n79: \n80: export const ASSET_PROPERTIES_SHAPE = {\n81:   'Entity ID': PropTypes.string.isRequired,\n82:   'Content type': PropTypes.oneOf([\n83:     contentTypes.BAR,\n84:     contentTypes.BOX,\n85:     contentTypes.PAGE,\n86:     contentTypes.SITE,\n87:   ]).isRequired,\n88:   'Conversion rate': PropTypes.number,\n89:   'Is published': PropTypes.bool,\n90:   'Last published': PropTypes.string,\n91:   'Publication domain': PropTypes.string,\n92:   'Template ID': PropTypes.string,\n93:   Views: PropTypes.number,\n94: };\n95: \n96: export function getAssetProperties(asset) {\n97:   if (!asset) return null;\n98:   const { _meta, content, kind: contentType } = asset;\n99:   const {\n100:     conversionRate,\n101:     currentEdition,\n102:     lastPublished,\n103:     publicationDomain,\n104:     template = null,\n105:     views,\n106:     sectionTemplates,\n107:   } = content;\n108: \n109:   const { id: entityId } = _meta;\n110: \n111:   return {\n112:     'Entity ID': entityId,\n113:     'Conversion rate': conversionRate,\n114:     'Content type': contentType,\n115:     'Is published': !!currentEdition,\n116:     'Last published': lastPublished,\n117:     'Publication domain': publicationDomain,\n118:     'Template ID': template,\n119:     'Section templates': sectionTemplates,\n120:     Views: views,\n121:     App: 'builder',\n122:   };\n123: }\n124: \n125: export const selectRootAssetProperties = createSelector(\n126:   selectRootContentEntity,\n127:   asset => {\n128:     return getAssetProperties(asset);\n129:   },\n130: );\n131: \n132: export const selectActiveAssetProperties = createSelector(\n133:   selectActiveEntity,\n134:   asset => {\n135:     return getAssetProperties(asset);\n136:   },\n137: );\n138: \n139: export function getAdditionalEventProperties(action) {\n140:   if (!action?.meta) return null;\n141:   const { source, eventProperties } = action.meta;\n142:   const result = { ...eventProperties };\n143: \n144:   if (source) {\n145:     result.Source = source;\n146:   }\n147: \n148:   return result;\n149: }\n150: \n151: export function getSectionProperties(state, action) {\n152:   if (!action?.payload) return null;\n153:   const { guid, options } = action.payload;\n154: \n155:   let sectionTemplateId;\n156:   if (guid) {\n157:     const section = getBoxByGuid(state, guid);\n158:     sectionTemplateId = section?.templateId;\n159:   }\n160: \n161:   return {\n162:     'Section template ID': sectionTemplateId,\n163:     Position: options?.position,\n164:   };\n165: }\n166: \n167: export function getImageProperties(image, imageType) {\n168:   const result = {};\n169: \n170:   if (image?.application) {\n171:     result['Image source'] = image.application\n172:       .replace('3', '')\n173:       .replace('core', 'main')\n174:       .replace('_api', '');\n175:   }\n176: \n177:   if (imageType) {\n178:     result['Image type'] = imageType;\n179:   }\n180: \n181:   return result;\n182: }\n183: \n184: export const selectFormProperties = createSelector(\n185:   selectForms,\n186:   forms => {\n187:     let usedCheckout = false;\n188:     let usedOrderBump = false;\n189: \n190:     forms.find(form => {\n191:       const formPaymentData = form.paymentData;\n192:       if (!formPaymentData) {\n193:         return false;\n194:       }\n195: \n196:       usedCheckout = usedCheckout || !!form.paymentData.primaryLineItem;\n197:       usedOrderBump = usedOrderBump || !!form.paymentData.orderBumpLineItem;\n198: \n199:       if (usedOrderBump && usedCheckout) {\n200:         return true;\n201:       }\n202: \n203:       return false;\n204:     });\n205: \n206:     return {\n207:       'Used order bump': usedOrderBump,\n208:       'Used checkout': usedCheckout,\n209:     };\n210:   },\n211: );\n\n\n-- ./src/verbiages.js\n1: // This file is for centralization of verbiages meant to be read by users.\n2: // Please put other constants (e.g. numbers, action names, URLs, css selectors) in other files.\n3: \n4: import { contentTypes } from '@lp/crucible/dist/constants/types';\n5: import { LpHeadline } from '@lp/text-editor';\n6: import { MAXIMUM_HISTORY } from './apis/aicopy-history-api';\n7: \n8: export const VERBIAGE_ARTICLE_START_HERE = 'Start Here';\n9: export const VERBIAGE_ARTICLE_POPUP = 'Create a pop-up';\n10: export const VERBIAGE_ARTICLE_LEADPAGE = 'Build a Landing Page';\n11: export const VERBIAGE_ARTICLE_BAR = 'Create an Alert Bar';\n12: export const VERBIAGE_ARTICLE_PUBLISH = 'Landing Page Publishing Overview';\n13: export const VERBIAGE_ARTICLE_CONNECT_INTEGRATIONS = 'Connect Your Integrations';\n14: export const VERBIAGE_ARTICLE_CONNECT_DOMAIN = 'Connect Your Domain';\n15: export const VERBIAGE_ARTICLE_CREATE_THANK_YOU = 'Create a thank you page';\n16: export const VERBIAGE_ARTICLE_SEND_LEADMAGNET = 'Send a lead magnet';\n17: export const VERBIAGE_ARTICLE_SITE = 'Build a Site';\n18: export const VERBIAGE_ARTICLE_PUBLISH_SITE = 'Publish Your Site';\n19: export const VERBIAGE_ARTICLE_EDIT_SITE_PAGES_SETTINGS = 'Edit Site Pages and Settings';\n20: export const VERBIAGE_ARTICLE_CUSTOMIZE_SITE_HEADER = 'Customize Site Header and Navigation';\n21: export const VERBIAGE_ARTICLE_HOW_POPUPS_WORK = 'How pop-ups work';\n22: export const VERBIAGE_ARTICLE_PUBLISH_POPUP = 'Publish your pop-ups';\n23: \n24: export const VERBIAGE_ARTICLES = {\n25:   VERBIAGE_ARTICLE_START_HERE,\n26:   VERBIAGE_ARTICLE_POPUP,\n27:   VERBIAGE_ARTICLE_LEADPAGE,\n28:   VERBIAGE_ARTICLE_BAR,\n29:   VERBIAGE_ARTICLE_PUBLISH,\n30:   VERBIAGE_ARTICLE_CONNECT_INTEGRATIONS,\n31:   VERBIAGE_ARTICLE_CONNECT_DOMAIN,\n32:   VERBIAGE_ARTICLE_CREATE_THANK_YOU,\n33:   VERBIAGE_ARTICLE_SEND_LEADMAGNET,\n34:   VERBIAGE_ARTICLE_SITE,\n35:   VERBIAGE_ARTICLE_PUBLISH_SITE,\n36:   VERBIAGE_ARTICLE_EDIT_SITE_PAGES_SETTINGS,\n37:   VERBIAGE_ARTICLE_CUSTOMIZE_SITE_HEADER,\n38:   VERBIAGE_ARTICLE_HOW_POPUPS_WORK,\n39:   VERBIAGE_ARTICLE_PUBLISH_POPUP,\n40: };\n41: \n42: export const VERBIAGE_EDIT_CHECKOUT_SETTINGS =\n43:   'You have an unused Checkout on your page. Edit your checkout settings to accept payments or remove the Checkout.';\n44: export const VERBIAGE_DICT_TOO_BIG =\n45:   'File is too big ({{filesize}}MB). Max filesize: {{maxFilesize}}MB.';\n46: export const VERBIAGE_FAVICON_REQUIREMENTS =\n47:   'Favicon images must be 16px or 32px square PNG or ICO files.';\n48: export const VERBIAGE_FIELDSET_LOAD_MAX_RETRIES =\n49:   'There was an error adding your destination. Please try again or check the status of the provider.';\n50: export const VERBIAGE_FILTER_FACEBOOK = 'Showing all images that are at least 200 \u00d7 200';\n51: export const VERBIAGE_FILTER_FAVICON =\n52:   'Showing all images that are 32 \u00d7 32, 16 x 16, and .png or .ico';\n53: export const VERBIAGE_FORMS_INVALID = 'Please fix your forms before performing this action.';\n54: export const VERBIAGE_FORMS_LOADING =\n55:   \"We're double checking your forms for you.  Please try again in a moment.\";\n56: export const VERBIAGE_FORM_FATAL_ERROR =\n57:   'There was an error with your form. Please try deleting it and adding a new one.';\n58: export const VERBIAGE_FORM_NOT_LINKED = 'Form not linked';\n59: export const VERBIAGE_FORM_RETRIEVAL_ERROR =\n60:   'There was an error retrieving your form, please try refreshing the page.';\n61: export const VERBIAGE_INTEGRATIONS_FIX =\n62:   'Please select a valid integration to send opt-ins before changing Lead Magnet settings.';\n63: export const VERBIAGE_INTEGRATIONS_ONLY =\n64:   'The only integration on a form cannot be removed. Please add a different integration before removing this one.';\n65: export const VERBIAGE_INTEGRATIONS_REMOVED = 'Invalid integrations have been removed.';\n66: export const VERBIAGE_INTEGRATION_CHANGE =\n67:   'We received form field changes from your integration(s). Please verify your form and republish.';\n68: export const VERBIAGE_INTEGRATION_NOT_FOUND =\n69:   'An integration attached to this form was not found. Please try reconnecting.';\n70: export const VERBIAGE_INTEGRATION_REFRESH_ERROR =\n71:   'There was an error refreshing your integration. Please try again.';\n72: export const VERBIAGE_LEADBOX_PUBLISH_ERROR =\n73:   'There was an error when publishing your leadbox. Please try again';\n74: export const VERBIAGE_LEADS_DOWNLOAD_ERROR =\n75:   'An error has occurred preparing your leads for download.';\n76: export const VERBIAGE_LEADS_DOWNLOAD_PREPARING = 'Preparing your leads for download.';\n77: export const VERBIAGE_LEGACY_INFUSIONSOFT_TOAST =\n78:   'A form on this page is connected to our legacy Infusionsoft integration, which is no longer supported.';\n79: export const VERBIAGE_AWEBER_TAGGING_TOAST =\n80:   'AWeber integrations now support tagging! Update your forms to take advantage of this new feature.';\n81: export const VERBIAGE_MAX_IMAGE_WIDTH = 'Recommended maximum image width: 2500px.';\n82: export const VERBIAGE_PAGE_PUBLISH_ERROR =\n83:   'There was an error when publishing your page. Please try again.';\n84: export const VERBIAGE_PAGE_PUBLISH_SUCCESS = 'Your page has been updated.';\n85: export const VERBIAGE_SITE_PUBLISH_ERROR =\n86:   'There was an error when publishing your site. Please try again.';\n87: export const VERBIAGE_SITE_PUBLISH_SUCCESS = 'Your site has been updated.';\n88: export const VERBIAGE_PAGE_RENAME_SLUG_INVALID = \"This URL isn't quite valid.\";\n89: export const VERBIAGE_PAGE_RENAME_SLUG_MISSING = 'Enter a URL.';\n90: \n91: export const VERBIAGE_PAGE_RENAME_SLUG_SUBCONTENT =\n92:   'This is the web address your users will use to visit your page.';\n93: export const VERBIAGE_PAGE_RENAME_SLUG_TAKEN = 'This URL is already in use.';\n94: export const VERBIAGE_PUBLISH_FAIL =\n95:   'Your form failed to publish due to an unexpected error. Please verify your form and republish.';\n96: export const VERBIAGE_SAVE_EDIT_ERROR =\n97:   'Oops! There was a problem trying to save your last edit. Please reload the page to prevent further issues.';\n98: export const VERBIAGE_SITE_DOMAIN_ALREADY_USED = 'A site is already published on this domain.';\n99: export const VERBIAGE_SITE_ROUTE_NAME_MISSING = 'You must give a name to show in your navigation.';\n100: export const VERBIAGE_SITE_ROUTE_URL_MISSING = VERBIAGE_PAGE_RENAME_SLUG_MISSING;\n101: export const VERBIAGE_SITE_ROUTE_SLUG_MISSING =\n102:   'The slug must be at least 3 characters long and can contain letters, numbers, and dashes.';\n103: export const VERBIAGE_SITE_ROUTE_SLUG_INVALID = VERBIAGE_PAGE_RENAME_SLUG_INVALID;\n104: export const VERBIAGE_SITE_ROUTE_URL_INVALID = VERBIAGE_PAGE_RENAME_SLUG_INVALID;\n105: export const VERBIAGE_SITE_ROUTE_MENU_EDIT_LINK = 'Edit Link';\n106: export const VERBIAGE_SITE_ROUTE_MENU_EDIT_ROUTE = 'Edit Page Settings';\n107: export const VERBIAGE_SITE_ROUTE_SECTION_INVALID = 'You must select a page and section.';\n108: export const VERBIAGE_SITE_ROUTE_TYPE_MISSING = 'You must select a page type.';\n109: export const VERBIAGE_SITE_ROUTE_LEADPAGE_INVALID = 'You must select a Landing Page.';\n110: export const VERBIAGE_SITE_ROUTE_APPEARANCE =\n111:   \"This is how your link will appear in your site's header\";\n112: export const VERBIAGE_SITE_ROUTES_MISSING_ROOT_ROUTE = 'You must have a home page.';\n113: export const VERBIAGE_SITE_ROUTES_THANK_YOU_UPDATED =\n114:   'It looks like the site page you were sending visitors to was deleted or marked as a draft.  Visitors will be redirected to your home page.';\n115: \n116: export const VERBIAGE_ZAPIER_OFF =\n117:   'All Zapier integrations have been turned off on your deleted form. If you wish to undo this form deletion, you will need to manually turn your Zaps back on.';\n118: \n119: export const VERBIAGE_ENTITY_KIND = {\n120:   [contentTypes.BAR]: 'Bar',\n121:   [contentTypes.BOX]: 'Pop-Up',\n122:   [contentTypes.PAGE]: 'Page',\n123:   [contentTypes.SITE]: 'Site',\n124: };\n125: \n126: export const VERBIAGE_NAVIGATION_ENTITY_NAME_TIP_TEXT = {\n127:   [contentTypes.BAR]: 'Edit Bar Name',\n128:   [contentTypes.BOX]: 'Edit Pop-Up Name',\n129:   [contentTypes.PAGE]: 'Edit Page Name & URL',\n130:   [contentTypes.SITE]: 'Edit Site Name',\n131: };\n132: \n133: // Settings\n134: export const verbiageSettingsPaneTitle = contentType => `${contentType} Settings`;\n135: export const VERBIAGE_SITE_SETTINGS_DEFAULT_INFO =\n136:   'Information entered here will cascade to all of your site pages by default. You can override this information at the page level.';\n137: \n138: // SEO Settings\n139: export const VERBIAGE_SEO_TAB_LABEL = 'SEO';\n140: export const VERBIAGE_SEO_PREVIEW_LABEL = 'SEO Preview';\n141: export const verbiageSeoPreviewHelp = contentType =>\n142:   `The above is an approximation of how your page${\n143:     contentType.toLowerCase() === 'site' ? 's' : ''\n144:   } will appear in search engine results.`;\n145: export const VERBIAGE_SEO_PREVIEW_DESCRIPTION_DEFAULT =\n146:   'Your description will appear here. Edit it below.';\n147: export const VERBIAGE_SEO_PREVIEW_DOMAIN_DEFAULT = 'my.example.com';\n148: export const VERBIAGE_SEO_PREVIEW_URL_DEFAULT = 'https://my.example.com/';\n149: export const verbiageSEOTitleLabel = contentType => `SEO ${contentType} Title`;\n150: export const VERBIAGE_SEO_TITLE_HELP = 'Aim to keep this under 70 characters.';\n151: export const verbiageSEODescriptionLabel = contentType => `SEO ${contentType} Description`;\n152: export const VERBIAGE_SEO_DESCRIPTION_HELP = 'Aim to keep this between 50 and 160 characters.';\n153: export const verbiageSEOKeywordsLabel = contentType => `SEO ${contentType} Keywords`;\n154: export const VERBIAGE_SEO_KEYWORDS_HELP = 'Separate keywords by commas.';\n155: export const VERBIAGE_SEO_SUPPORT_HELP =\n156:   'Want to learn more about these fields? <a href=\"https://support.leadpages.com/hc/en-us/articles/115007582368-Tracking-and-third-party-analytics#search-engine-optimization-seo\" target=\"_blank\" rel=\"noopener noreferrer\">Click here</a>';\n157: export const verbiageSEONoRobotsLabel = contentType =>\n158:   `I don't want search engines to index this ${contentType.toLowerCase()}`;\n159: export const VERBIAGE_SEO_ROBOTS_DISABLED_HELP = 'This is currently set at the site level.';\n160: \n161: // Social Settings\n162: export const VERBIAGE_SOCIAL_TAB_LABEL = 'Social';\n163: export const VERBIAGE_SOCIAL_PREVIEW_LABEL = 'Social Preview';\n164: export const verbiageSocialPreviewHelp = contentType =>\n165:   `The above is an approximation of how your page${\n166:     contentType.toLowerCase() === 'site' ? 's' : ''\n167:   } will appear on social media sites.`;\n168: export const VERBIAGE_SOCIAL_PREVIEW_DESCRIPTION_DEFAULT =\n169:   'Your description will appear here. Edit it below.';\n170: export const VERBIAGE_SOCIAL_PREVIEW_DOMAIN_DEFAULT = 'my.example.com';\n171: export const verbiageSocialImageLabel = contentType => `Social ${contentType} Image`;\n172: export const VERBIAGE_SOCIAL_IMAGE_LINK_LABEL = 'Choose Image';\n173: export const VERBIAGE_SOCIAL_IMAGE_RECOMMENDATIONS = [\n174:   'Minimum size: 600px x 315px',\n175:   'Recommended: 1200px x 630px or larger',\n176:   'Recommended aspect ratio: 1.91:1',\n177: ];\n178: export const verbiageSocialDebugHelp = (url, linkClass) =>\n179:   `Not seeing your updates in Facebook? Publish and try running the <a href=\"https://developers.facebook.com/tools/debug/sharing/?q=${encodeURIComponent(\n180:     url,\n181:   )}\" class=\"${linkClass}\" target=\"_blank\" rel=\"noopener noreferrer\">Facebook Debugger Tool</a>.`;\n182: export const VERBIAGE_SOCIAL_SITE_NAME_LABEL = 'Social Site Name';\n183: export const VERBIAGE_SOCIAL_SITE_NAME_HELP = 'The name of your site or company.';\n184: export const verbiageSocialTitleLabel = contentType => `Social ${contentType} Title`;\n185: export const VERBIAGE_SOCIAL_TITLE_HELP = 'Keep this clear and concise.';\n186: export const verbiageSocialDescriptionLabel = contentType => `Social ${contentType} Description`;\n187: export const VERBIAGE_SOCIAL_DESCRIPTION_HELP = 'Aim to keep this under 300 characters.';\n188: export const VERBIAGE_SOCIAL_SUPPORT_HELP =\n189:   'Want to learn more about these fields? <a href=\"https://support.leadpages.com/hc/en-us/articles/218459337\" target=\"_blank\" rel=\"noopener noreferrer\">Click here</a>';\n190: export const VERBIAGE_SOCIAL_URL_LABEL = 'Social URL';\n191: export const verbiageSocialUrlHelp = contentType =>\n192:   `The URL Facebook will use when linking to this ${contentType}. This must be accessible from the internet. When blank, the URL will be determined by the link shared in Facebook. Technical details: this is the og:url meta tag.`;\n193: \n194: // Analytics Settings\n195: export const VERBIAGE_ANALYTICS_INFO =\n196:   'This section enables you to gather data by pasting tracking code from the analytics service providers of your choice (e.g. Google Analytics, Facebook Pixel)';\n197: export const VERBIAGE_ANALYTICS_TAB_LABEL = 'Analytics';\n198: export const VERBIAGE_ANALYTICS_GOOGLE_4_ID_LABEL = 'Google Analytics 4 Measurement ID';\n199: export const VERBIAGE_ANALYTICS_GOOGLE_ID_LABEL = 'Google Analytics Tracking ID';\n200: export const verbiageContentNameLabel = contentType => `${contentType} Name`;\n201: export const VERBAIGE_ANALYTICS_GOOGLE_4_ID_HELP =\n202:   'The Google Analytics 4 Measurement ID for your tracking code.';\n203: export const VERBAIGE_ANALYTICS_GOOGLE_ID_HELP =\n204:   'The Google Analytics Profile ID for your tracking code.';\n205: export const VERBIAGE_ANALYTICS_HEAD_SECTION_LABEL = 'Head Section Tracking Code';\n206: export const VERBIAGE_ANALYTICS_OPENING_BODY_LABEL = 'Immediately after the opening <body> tag';\n207: export const VERBIAGE_ANALYTICS_CLOSING_BODY_LABEL = 'Immediately before the closing </body> tag';\n208: export const verbiageAnalyticsSupportInfo = contentType =>\n209:   `Please note that we do not provide support for this section. Any non-tracking code placed in the above areas may cause major problems with your ${contentType}. For troubleshooting, please use the support and documentation provided by your analytics service provider.`;\n210: \n211: // Leadbar\n212: export const VERBIAGE_LEADBAR_PUBLISH_ERROR =\n213:   'There was an error when publishing your bar. Please try again';\n214: export const VERBIAGE_LEADBAR_SIDE_NAV_SETTINGS_BUTTON_LABEL = 'Layout';\n215: export const VERBIAGE_LEADBAR_SIDE_NAV_TRACKING_BUTTON_LABEL = 'Settings';\n216: export const VERBIAGE_LEADBAR_LAYOUT_PANE_TITLE = 'Bar Layout';\n217: export const VERBIAGE_LEADBAR_LAYOUT_PANE_LAYOUT_SECTION_TITLE = 'Layout';\n218: export const VERBIAGE_LEADBAR_LAYOUT_PANE_LAYOUT_EXAMPLE_TEXT = 'Example Text';\n219: export const VERBIAGE_LEADBAR_LAYOUT_PANE_LAYOUT_CONFIRM_MODAL_BUTTON_LABEL = 'Change Layout';\n220: export const VERBIAGE_LEADBAR_LAYOUT_PANE_LAYOUT_CONFIRM_MODAL_COPY = `<p>Selecting a different layout will override<br /> your customizations and integrations.</p>\n221:    <p>Do you wish to proceed?</p>`;\n222: \n223: export const VERBIAGE_LEADBAR_LAYOUT_PANE_BACKGROUND_SECTION_TITLE = 'Background';\n224: export const VERBIAGE_LEADBAR_LAYOUT_PANE_BACKGROUND_COLOR_SETTING_LABEL = 'Color';\n225: export const VERBIAGE_LEADBAR_LAYOUT_PANE_POSITION_SECTION_TITLE = 'Position';\n226: export const VERBIAGE_LEADBAR_LAYOUT_PANE_POSITION_LOCATION_SETTING_LABEL = 'Location';\n227: export const VERBIAGE_LEADBAR_LAYOUT_PANE_POSITION_LOCATION_SETTING_TOP_LABEL = 'Top';\n228: export const VERBIAGE_LEADBAR_LAYOUT_PANE_POSITION_LOCATION_SETTING_BOTTOM_LABEL = 'Bottom';\n229: export const VERBIAGE_LEADBAR_LAYOUT_PANE_POSITION_STICKY_SETTING_LABEL =\n230:   'Remain in place on scroll';\n231: \n232: // Lead Rank\n233: export const VERBIAGE_LEAD_RANK = 'Leadmeter';\n234: export const VERBIAGE_LEAD_RANK_DISPLAY_OPTIONS_ON = 'ON';\n235: export const VERBIAGE_LEAD_RANK_DISPLAY_OPTIONS_OFF = 'OFF';\n236: export const VERBIAGE_LEAD_RANK_DISPLAY_OPTIONS_TITLE = 'Display Options';\n237: export const VERBIAGE_LEAD_RANK_DISPLAY_OPTIONS_SAVE = 'SAVE';\n238: export const VERBIAGE_LEAD_RANK_DISPLAY_OPTIONS_CANCEL = 'CANCEL';\n239: \n240: // Lead Rank Recommendations Categories\n241: export const VERBIAGE_CTA_CATEGORY = 'Call to Action';\n242: export const VERBIAGE_FORM_CATEGORY = 'Opt-in Form';\n243: export const VERBIAGE_LAYOUT_CATEGORY = 'Layout';\n244: export const VERBIAGE_READABILITY_CATEGORY = 'Readability';\n245: \n246: // Lead Rank CTA Recommendations\n247: export const VERBIAGE_LEAD_RANK_CTA_EQUALS_SUBMIT = {\n248:   positiveShortDescription: 'CTA text drives action',\n249:   negativeShortDescription: \"CTA contains 'submit'\",\n250:   description:\n251:     'Try customizing your call to action with something more attention-getting, like: Let me have it!',\n252: };\n253: export const VERBIAGE_LEAD_RANK_CTA_LONG_TEXT = {\n254:   positiveShortDescription: 'CTA has fewer than 24 characters',\n255:   negativeShortDescription: 'CTA has more than 24 characters',\n256:   description: '24 characters or less is the ideal length for your call-to-action button.',\n257: };\n258: export const VERBIAGE_LEAD_RANK_CTA_LOW_CONTRAST = {\n259:   positiveShortDescription: 'Button is easily readable',\n260:   negativeShortDescription: 'Button text is hard to read',\n261:   description:\n262:     'Without enough color contrast between the text and button color, your visitors will have a hard time reading it.',\n263: };\n264: \n265: // Lead Rank Form Recommendations\n266: export const VERBIAGE_LEAD_RANK_FORM_NONE = {\n267:   positiveShortDescription: 'Includes lead capture mechanism',\n268:   negativeShortDescription: 'No lead capture mechanism',\n269:   description:\n270:     'Include a lead capture mechanism to make sure your page is able to turn a visitor into a lead.',\n271: };\n272: export const VERBIAGE_LEAD_RANK_FORM_MORE_THAN_3_FIELDS = {\n273:   positiveShortDescription: 'Fewer than 3 form fields (Critical)',\n274:   negativeShortDescription: 'More than 3 form fields (Critical)',\n275:   description:\n276:     'The more information you ask for, the less likely a visitor is to opt in. Try keeping your form fields down to a bare minimum.',\n277: };\n278: export const VERBIAGE_LEAD_RANK_FORM_MORE_THAN_2_FIELDS = {\n279:   positiveShortDescription: 'Fewer than 2 form fields',\n280:   negativeShortDescription: 'More than 2 form fields',\n281:   description:\n282:     'When it comes to form fields, less is more. Optimize your email capture form by including no more than 2 fields.',\n283: };\n284: export const VERBIAGE_LEAD_RANK_FORM_PHONE_NUMBER_FIELD = {\n285:   positiveShortDescription: 'Correct use of phone field',\n286:   negativeShortDescription: 'Incorrect use of phone field',\n287:   description:\n288:     \"When it comes to form fields, less is more. Only ask for your visitor's phone number if you need it to conduct a free consultation.\",\n289: };\n290: export const VERBIAGE_LEAD_RANK_FORM_ON_PAGE = {\n291:   positiveShortDescription: 'Correct use of in-page form',\n292:   negativeShortDescription: 'Incorrect use of in-page form',\n293:   description:\n294:     'For best results, try using pop-ups for all your incentive offers (other than a newsletter sign-up).',\n295: };\n296: \n297: // Lead Rank Layout Recommendations\n298: export const VERBIAGE_LEAD_RANK_LAYOUT_MORE_THAN_1_VIDEO = {\n299:   positiveShortDescription: 'Fewer than 2 videos',\n300:   negativeShortDescription: 'More than 1 video',\n301:   description: 'Too many videos can make your page load slowly and cause visitors to click away.',\n302: };\n303: export const VERBIAGE_LEAD_RANK_LAYOUT_MORE_THAN_2_VIDEOS = {\n304:   positiveShortDescription: 'Fewer than 3 videos (Critical)',\n305:   negativeShortDescription: 'More than 2 videos (Critical)',\n306:   description: 'Too many videos can make your page load slowly and cause visitors to click away.',\n307: };\n308: export const VERBIAGE_LEAD_RANK_LAYOUT_LONG_COUNTDOWN_TIME = {\n309:   positiveShortDescription: 'Countdown window is brief',\n310:   negativeShortDescription: 'Countdown window is too long',\n311:   description:\n312:     'For a countdown timer to add a sense of urgency, it has to offer a limited window of time. Try shortening the length of your timer.',\n313: };\n314: \n315: // Lead Rank Readability Recommendations\n316: export const VERBIAGE_LEAD_RANK_READABILITY_TOO_MANY_LIST_ITEMS = {\n317:   positiveShortDescription: 'Bulleted list is concise',\n318:   negativeShortDescription: '8 or more bullets in list',\n319:   description:\n320:     'Lists that are too long clutter a page and confuse readers. Try restructuring your content for better readability.',\n321: };\n322: export const VERBIAGE_LEAD_RANK_READABILITY_EVEN_LIST_ITEMS = {\n323:   positiveShortDescription: 'Odd number of bullets in list',\n324:   negativeShortDescription: 'Even number of bullets in list',\n325:   description:\n326:     'Ever noticed that nature comes in odd numbers? So should bulleted items on a list...they just look better.',\n327: };\n328: export const VERBIAGE_LEAD_RANK_READABILITY_LONG_HEADLINE = {\n329:   positiveShortDescription: 'Concise headline (< 70 characters)',\n330:   negativeShortDescription: 'Long headline (> 70 characters)',\n331:   description:\n332:     'Powerful headlines are concise and compelling. Aim for less than 70 characters or fewer than 3 lines.',\n333: };\n334: export const VERBIAGE_LEAD_RANK_SCORE_WORD = {\n335:   0: 'loading',\n336:   1: 'poor',\n337:   2: 'okay',\n338:   3: 'good',\n339:   4: 'great',\n340:   5: 'excellent',\n341: };\n342: \n343: export const VERBIAGE_LEAD_RANK_COMING_SOON = 'We are working on a rule set for this template.';\n344: \n345: export const VERBIAGE_LEAD_RANK_COMING_SOON_TITLE = 'Stay tuned!';\n346: \n347: export const VERBIAGE_LEAD_RANK_DISPLAY_OPTIONS_SHOW = 'Show Leadmeter on this page';\n348: \n349: export const VERBIAGE_LEAD_RANK_DISPLAY_OPTIONS_HIDE = 'Hide Leadmeter on this page';\n350: export const VERBIAGE_LEAD_RANK_LEARN_MORE = 'Learn more about Leadmeter';\n351: export const VERBIAGE_LEAD_RANK_FEEDBACK = 'Give us feedback';\n352: \n353: export const verbiageDeleteLeadboxError = count =>\n354:   `We\u2019re sorry but we were unable to restore ${count} deleted pop-up.`;\n355: export const verbiageLeadsDownloadReady = uri => `Your leads are ready for download! <form method=\"get\" action=\"${uri}\">\n356:   <button type=\"submit\" class=\"ui-link ui-link--alt\">Download CSV</button>\n357: </form>`;\n358: export const verbiageReauthenticate = toReauthenticate =>\n359:   `Please re-authenticate: ${toReauthenticate}`;\n360: export const verbiageReauthenticateIntegration = 'Please re-authenticate.';\n361: \n362: export const verbiageSiteLeadpageCollision = pageName =>\n363:   `This slug is taken by another leadpage: \"${pageName}\"`;\n364: export const verbiageSiteRouteCollision = pageName =>\n365:   `This slug is taken by another page: \"${pageName}\"`;\n366: export const verbiageSlugTakenByLeadpage = slugName => `Slug \"${slugName}\" is taken by a Leadpage.`;\n367: export const verbiageHelpMe = pluralize => `Help me fix ${pluralize ? 'them' : 'it'}`;\n368: export const verbiageIntegrationsNoneValid = names =>\n369:   `It looks like you don't have a valid location to send opt-ins. Please update the following [${names}]`;\n370: export const verbiageIntegrationsSanitized = (names, pluralize) =>\n371:   `Invalid selection${pluralize ? 's' : ''} for [${names}] ${\n372:     pluralize ? 'have' : 'has'\n373:   } been removed.`;\n374: \n375: export const verbiageEntityEditNameSubcontent = entityType =>\n376:   `This identifies your ${entityType} in app.`;\n377: export const verbiageEntityEditNameMissing = entityType => `Enter a ${entityType} name.`;\n378: \n379: export const VERBIAGE_TRACKING_PANE_TOO_SHORT = 'Please enter a name';\n380: export const VERBIAGE_TRACKING_PANE_TOO_LONG = 'Please enter no more than 1024 characters';\n381: export const VERBIAGE_TRACKING_PANE_DESCRIPTION =\n382:   'This section enables your ability to gather data by pasting tracking code from the analytics service provider of your choice. (i.e.Google Analytics, Visual Website Optimizer, etc.)';\n383: export const VERBIAGE_TRACKING_PANE_NOTE =\n384:   'Please note that we do not provide support for this section. Any non-tracking code placed in the above areas may cause major problems with your page. For troubleshooting, please use the support and documentation provided by your analytics service provider.';\n385: export const VERBIAGE_TRACKING_PANE_HEAD_CODE = 'Head Section Tracking Code';\n386: export const VERBIAGE_TRACKING_PANE_BODY_CODE = 'Body Section Tracking Code';\n387: \n388: export const VERBIAGE_SITES_HIDDEN_NAV_EMPTY =\n389:   'Drag and drop a page here to remove it from your site header.';\n390: export const VERBIAGE_SITES_VISIBLE_NAV_EMPTY =\n391:   'Drag and drop a page here to add it to your site header.';\n392: \n393: export const DRAFT_PAGE_INACCESSIBLE =\n394:   'This will make your page inaccessible to users. Any links to this page will redirect to your 404 Error Page.';\n395: \n396: export const HOME_PAGE_DRAFT = 'You cannot mark your home page as a draft.';\n397: \n398: export const VERBIAGE_PASTE_SECTION_ERROR = \"We're having some trouble pasting your section.\";\n399: export const VERBIAGE_PASTE_SECTION_VERSION_MISMATCH =\n400:   'Something\u2019s not quite right. Refresh all the browser tabs you are using to get back to editing. If you copied a section, you\u2019ll need to go back and copy it again.';\n401: \n402: export const VERBIAGE_PURCHASE_FAILED_ERROR =\n403:   'Something went wrong with your purchase. Please try again.';\n404: export const verbiagePaymentDeclinedError = url =>\n405:   `Payment declined. <a href=${url} target=\"_blank\">Please verify the card on file.</a>`;\n406: \n407: export const VERBIAGES_AICOPY_FEEDBACK_MODAL = {\n408:   TITLE_INITIAL: 'Maximum amount of shuffles reached',\n409:   SUBTITLE_INITIAL: \"You've reached the maximum amount of shuffles available\",\n410:   DESCRIPTION_INITIAL:\n411:     'We would like to connect with you and hear about your experience using our shuffle headline beta feature. Are you interested in sharing feedback?',\n412:   TEXT_INITIAL: 'Contact Me',\n413: \n414:   TITLE_FINAL: \"We'll be in touch\",\n415:   SUBTITLE_FINAL: 'Thank you for interest in our shuffle headline beta feature',\n416:   DESCRIPTION_FINAL: \"We'll be in touch with more information.\",\n417:   TEXT_FINAL: 'OK',\n418: };\n419: \n420: export const VERBIAGES_STYLE_PANE_FONT_TAB = {\n421:   HEADLINE_DETAILS: 'Headlines are typically used for sections, pages, events, and more.',\n422:   NORMAL_TEXT_DETAILS: 'Normal text is used for paragraphs, product descriptions, and more.',\n423:   getSupportingText: contentType => `Create consistency and confidence when publishing by adding global font styles that appear\n424:         across your ${contentType}. The items below will appear as your default but you can override\n425:         them individually as needed.`,\n426:   summaryLabels: {\n427:     [LpHeadline.Headline]: 'Headline 1 <H1>',\n428:     [LpHeadline.Subhead]: 'Headline 2 <H2>',\n429:     [LpHeadline.SmallSubhead]: 'Headline 3 <H3>',\n430:     paragraph: 'Normal Text',\n431:   },\n432: };\n433: \n434: export const VERBIAGES_WRITING_ASSISTANT = {\n435:   PLACEHOLDER: {\n436:     DESCRIPTION:\n437:       'Describe your idea and summarize the points/topics you\u2019d like to cover. The more information you provide the better your three results will be.',\n438:   },\n439:   TITLE: {\n440:     FORM: 'Writing Assistant',\n441:     RESULTS: 'Copy Options',\n442:     USE_CASE: 'Use Case',\n443:     TONES: 'Tone',\n444:     WRITEUP: 'Write-up',\n445:     COPY_TAB: 'GENERATE',\n446:     HISTORY_TAB: 'HISTORY',\n447:   },\n448:   INFO_TEXT: {\n449:     MAIN1: 'New to Writing Assistant?',\n450:     MAIN2: 'New to Swap Headline?',\n451:     GENERATION1: `Your copy is ready!`,\n452:     GENERATION2: `Review your copy options below and choose a winner (or go back and change your prompts for new suggestions).`,\n453:     UPGRADE: 'Learn more about Writing Assistant.',\n454:     HISTORY1: `These are the ${MAXIMUM_HISTORY} most recent copy options generated for you, listed from newest to oldest.`,\n455:     HISTORY2: `You don't have any generated use cases.`,\n456:     HISTORY3: 'Try Writing Assistant',\n457:   },\n458:   HELPERTEXT: {\n459:     DESCRIPTION: 'For best results provide detailed input',\n460:   },\n461:   TOOLTIP: {\n462:     USE_CASE:\n463:       'Let us know what you\u2019ll be using this text for. This will impact the copy options you get.',\n464:     WRITEUP: 'Tell us what you want to write about and receive three copy options.',\n465:     TONES: 'Select a tone to use for your copy options (this is optional).',\n466:   },\n467:   CREDIT_ESTIMATE: 'Estimated Credits required:',\n468:   CTA: 'Get More Credits',\n469: };\n470: \n471: export const VERBIAGES_AICOPY_ERROR_MESSAGES = {\n472:   ERROR: 'Oh dang! We were unable to generate AI content! Please try again.',\n473: };\n474: \n475: export const VERBIAGES_EMAIL_CONFIRMATION = {\n476:   titleInitial: 'Please Verify Your Email',\n477:   descriptionTextInitial: 'Almost there! You must verify your email before you can publish.',\n478:   confirmTextInitial: 'Verify Email',\n479:   titleConfirmed: 'Verification Email Sent!',\n480:   descriptionTextConfirmed:\n481:     'You will receive an email shortly with a link to verify your email address.',\n482:   confirmTextConfirmed: 'OK',\n483: };\n\n    \n nothing left to clarify\n"